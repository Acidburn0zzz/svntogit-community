diff --git a/Singular/dyn_modules/polymake/polymake_conversion.cc b/Singular/dyn_modules/polymake/polymake_conversion.cc
index 7d6411997..896db9ca9 100644
--- a/Singular/dyn_modules/polymake/polymake_conversion.cc
+++ b/Singular/dyn_modules/polymake/polymake_conversion.cc
@@ -403,7 +403,7 @@ gfan::ZFan* PmFan2ZFan (polymake::perl::Object* pf)
     int n = pf->give("N_MAXIMAL_CONES");
     for (int i=0; i<n; i++)
     {
-      polymake::perl::Object pmcone=pf->CallPolymakeMethod("cone",i);
+      polymake::perl::Object pmcone=pf->call_method("cone",i);
       gfan::ZCone* zc=PmCone2ZCone(&pmcone);
       zf->insert(*zc);
     }
diff --git a/Singular/dyn_modules/polymake/polymake_wrapper.cc b/Singular/dyn_modules/polymake/polymake_wrapper.cc
index a43eb66cd..3f73bd4f8 100644
--- a/Singular/dyn_modules/polymake/polymake_wrapper.cc
+++ b/Singular/dyn_modules/polymake/polymake_wrapper.cc
@@ -34,7 +34,7 @@ static BOOLEAN bbpolytope_Op2(int op, leftv res, leftv i1, leftv i2)
           polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
           polymake::perl::Object* pq = ZPolytope2PmPolytope(zq);
           polymake::perl::Object pms;
-          CallPolymakeFunction("minkowski_sum", *pp, *pq) >> pms;
+          polymake::call_function("minkowski_sum", *pp, *pq) >> pms;
           ms = PmPolytope2ZPolytope(&pms);
           delete pp;
           delete pq;
@@ -1063,7 +1063,7 @@ BOOLEAN PMlatticePoints(leftv res, leftv args)
     {
       polymake::perl::Object* p = ZPolytope2PmPolytope(zp);
       #if (POLYMAKEVERSION >=214)
-      polymake::Matrix<polymake::Integer> lp = p->CallPolymakeMethod("LATTICE_POINTS");
+      polymake::Matrix<polymake::Integer> lp = p->call_method("LATTICE_POINTS");
       #elif (POLYMAKEVERSION >=212)
       polymake::Matrix<polymake::Integer> lp = p->give("LATTICE_POINTS");
       #else
@@ -1291,7 +1291,7 @@ BOOLEAN PMhilbertBasis(leftv res, leftv args)
     {
       polymake::perl::Object* p = ZPolytope2PmPolytope(zp);
       #if (POLYMAKEVERSION >=214)
-      polymake::Matrix<polymake::Integer> lp = p->CallPolymakeMethod("HILBERT_BASIS");
+      polymake::Matrix<polymake::Integer> lp = p->call_method("HILBERT_BASIS");
       #elif (POLYMAKEVERSION >=212)
       polymake::Matrix<polymake::Integer> lp = p->give("HILBERT_BASIS");
       #else
@@ -1375,7 +1375,7 @@ BOOLEAN PMminkowskiSum(leftv res, leftv args)
         polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
         polymake::perl::Object* pq = ZPolytope2PmPolytope(zq);
         polymake::perl::Object pms;
-        CallPolymakeFunction("minkowski_sum", *pp, *pq) >> pms;
+        polymake::call_function("minkowski_sum", *pp, *pq) >> pms;
         delete pp;
         delete pq;
         ms = PmPolytope2ZPolytope(&pms);
@@ -1403,7 +1403,7 @@ BOOLEAN PMminkowskiSum(leftv res, leftv args)
         polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
         polymake::perl::Object* pq = ZPolytope2PmPolytope(zq);
         polymake::perl::Object pms;
-        CallPolymakeFunction("minkowski_sum", *pp, *pq) >> pms;
+        polymake::call_function("minkowski_sum", *pp, *pq) >> pms;
         delete pp;
         delete pq;
         ms = PmPolytope2ZPolytope(&pms);
@@ -1437,7 +1437,7 @@ BOOLEAN PMminkowskiSum(leftv res, leftv args)
         polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
         polymake::perl::Object* pq = ZPolytope2PmPolytope(zq);
         polymake::perl::Object pms;
-        CallPolymakeFunction("minkowski_sum", *pp, *pq) >> pms;
+        polymake::call_function("minkowski_sum", *pp, *pq) >> pms;
         delete pp;
         delete pq;
         ms = PmPolytope2ZPolytope(&pms);
@@ -1466,7 +1466,7 @@ BOOLEAN PMminkowskiSum(leftv res, leftv args)
         polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
         polymake::perl::Object* pq = ZPolytope2PmPolytope(zq);
         polymake::perl::Object pms;
-        CallPolymakeFunction("minkowski_sum", *pp, *pq) >> pms;
+        polymake::call_function("minkowski_sum", *pp, *pq) >> pms;
         delete pp;
         delete pq;
         ms = PmPolytope2ZPolytope(&pms);
@@ -1494,7 +1494,7 @@ polymake::Matrix<polymake::Integer> verticesOf(const polymake::perl::Object* p,
   polymake::Matrix<polymake::Integer> allrays = p->give("VERTICES");
   polymake::Matrix<polymake::Integer> wantedrays;
   bool ok = true;
-  for(polymake::Entire<polymake::Set<polymake::Integer> >::const_iterator i=polymake::entire(*s); !i.at_end(); i++)
+  for(auto i=polymake::entire(*s); !i.at_end(); i++)
   {
     wantedrays = wantedrays / allrays.row(PmInteger2Int(*i,ok));
   }
@@ -1709,7 +1709,7 @@ BOOLEAN visual(leftv res, leftv args)
     try
     {
       polymake::perl::Object* pp = ZPolytope2PmPolytope(zp);
-      VoidCallPolymakeFunction("jreality",pp->CallPolymakeMethod("VISUAL"));
+      polymake::call_function("jreality",pp->call_method("VISUAL"));
       delete pp;
     }
     catch (const std::exception& ex)
@@ -1730,7 +1730,7 @@ BOOLEAN visual(leftv res, leftv args)
     try
     {
       polymake::perl::Object* pf=ZFan2PmFan(zf);
-      VoidCallPolymakeFunction("jreality",pf->CallPolymakeMethod("VISUAL"));
+      polymake::call_function("jreality",pf->call_method("VISUAL"));
     }
     catch (const std::exception& ex)
     {
@@ -1759,7 +1759,7 @@ BOOLEAN normalFan(leftv res, leftv args)
     {
       polymake::perl::Object* p=ZPolytope2PmPolytope(zp);
       polymake::perl::Object pf;
-      CallPolymakeFunction("normal_fan", *p) >> pf;
+      polymake::call_function("normal_fan", *p) >> pf;
       delete p;
       zf = PmFan2ZFan(&pf);
     }
