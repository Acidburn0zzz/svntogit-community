From 5b6a3aa4ab5207e4c7d85dd076069c146661248b Mon Sep 17 00:00:00 2001
From: 李成刚 <lichenggang@uniontech.com>
Date: Thu, 24 Dec 2020 17:36:40 +0800
Subject: [PATCH] feat: add support for Linux 5.10 Task: https://pms.uniontech.com/zentao/story-view-7528.html

Change-Id: I02c1ec5e29a495cef0a03088e425790e89286160
---

diff --git a/debian/changelog b/debian/changelog
index 94f2361..7876d60 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,9 @@
+deepin-anything (5.0.2+dde) unstable; urgency=medium
+
+  * add support for Linux 5.10.
+
+ -- Deepin Package Builder <lichenggang@uniontech.com>  Thu, 24 Dec 2020 17:17:33 +0800
+
 deepin-anything (20180315+1) unstable; urgency=medium
 
   * Initial release.
diff --git a/kernelmod/vfs_utils.c b/kernelmod/vfs_utils.c
index 2549e10..75139dd 100644
--- a/kernelmod/vfs_utils.c
+++ b/kernelmod/vfs_utils.c
@@ -6,6 +6,7 @@
 #include <linux/slab.h>
 #include <linux/uaccess.h>
 #include <linux/file.h>
+#include <linux/version.h>
 
 #include "vfs_utils.h"
 
@@ -23,9 +24,13 @@
 		pr_err("error opening %s\n", filename);
 		return 0;
 	}
-	mm_segment_t old_fs = get_fs();
-	set_fs(KERNEL_DS);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+        mm_segment_t old_fs = force_uaccess_begin();
+#else
+        mm_segment_t old_fs = get_fs();
+        set_fs(KERNEL_DS);
+#endif
 	// i_size_read is useless here because procfs does not have i_size
 	// loff_t size = i_size_read(file_inode(filp));
 	char *buf = 0;
@@ -46,7 +51,13 @@
 		size += ALLOC_UNIT;
 		kfree(buf);
 	}
-	set_fs(old_fs);
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 10, 0)
+        force_uaccess_end(old_fs);
+#else
+        set_fs(old_fs);
+#endif	
+	
 	filp_close(filp, 0);
 	// pr_info("%s size: %d\n", filename, *real_size);
 	return buf;
