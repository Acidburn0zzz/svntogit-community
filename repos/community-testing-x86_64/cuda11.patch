diff -aur --color magma-2.5.3-old/CMakeLists.txt magma-2.5.3-new/CMakeLists.txt
--- magma-2.5.3-old/CMakeLists.txt  2020-06-22 16:18:13.789152294 +0300
+++ magma-2.5.3-new/CMakeLists.txt  2020-06-22 17:00:01.365798021 +0300
@@ -101,7 +101,7 @@

 # ----------------------------------------
 # locate CUDA libraries
-set( GPU_TARGET "Kepler Maxwell Pascal" CACHE STRING "CUDA architectures to compile for; one or more of Fermi, Kepler, Maxwell, Pascal, Volta, or valid sm_[0-9][0-9]" )
+set( GPU_TARGET "Kepler Maxwell Pascal" CACHE STRING "CUDA architectures to compile for; one or more of Fermi, Kepler, Maxwell, Pascal, Volta, Turing, Ampere or valid sm_[0-9][0-9]" )
 find_package( CUDA )
 if (CUDA_FOUND)
     message( STATUS "Found CUDA ${CUDA_VERSION}" )
@@ -151,6 +151,10 @@
         set( GPU_TARGET "${GPU_TARGET} sm_75" )
     endif()
 
+    if (${GPU_TARGET} MATCHES Ampere)
+        set( GPU_TARGET "${GPU_TARGET} sm_80" )
+    endif()
+
     if (${GPU_TARGET} MATCHES sm_20)
         if (NOT MIN_ARCH)
             set( MIN_ARCH 200 )
@@ -259,8 +263,17 @@
         message( STATUS "    compile for CUDA arch 7.5 (Turing)" )
     endif()
 
+    if (${GPU_TARGET} MATCHES sm_80)
+        if (NOT MIN_ARCH)
+            set( MIN_ARCH 800 )
+        endif()
+        set( NV_SM ${NV_SM} -gencode arch=compute_80,code=sm_80 )
+        set( NV_COMP        -gencode arch=compute_80,code=compute_80 )
+        message( STATUS "    compile for CUDA arch 8.0 (Ampere)" )
+    endif()
+
     if (NOT MIN_ARCH)
-        message( FATAL_ERROR "GPU_TARGET must contain one or more of Fermi, Kepler, Maxwell, Pascal, Volta, Turing, or valid sm_[0-9][0-9]" )
+        message( FATAL_ERROR "GPU_TARGET must contain one or more of Fermi, Kepler, Maxwell, Pascal, Volta, Turing, Ampere or valid sm_[0-9][0-9]" )
     endif()
 
         set( CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS} -Xcompiler -fPIC -DHAVE_CUBLAS ${NV_SM} ${NV_COMP} ${FORTRAN_CONVENTION} )
diff -aur --color magma-2.5.3-old/interface_cuda/interface.cpp magma-2.5.3-new/interface_cuda/interface.cpp
--- magma-2.5.3-old/interface_cuda/interface.cpp	2020-03-30 03:48:24.000000000 +0300
+++ magma-2.5.3-new/interface_cuda/interface.cpp	2020-06-22 15:48:15.192500739 +0300
@@ -458,7 +458,11 @@
             err = cudaPointerGetAttributes( &attr, const_cast<void*>( A ));
             if ( ! err ) {
                 // definitely know type
+#if (CUDA_VERSION >= 10000)
+                return (attr.type == cudaMemoryTypeDevice);
+#else
                 return (attr.memoryType == cudaMemoryTypeDevice);
+#endif
             }
             else if ( err == cudaErrorInvalidValue ) {
                 // clear error; see http://icl.cs.utk.edu/magma/forum/viewtopic.php?f=2&t=529
