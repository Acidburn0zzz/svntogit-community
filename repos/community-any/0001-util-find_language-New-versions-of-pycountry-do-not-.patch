From ad4555f9904805e4fd56a30ca6529536edb0f919 Mon Sep 17 00:00:00 2001
From: Jerome Flesch <jflesch@openpaper.work>
Date: Wed, 19 Dec 2018 22:38:59 +0100
Subject: [PATCH] util: find_language(): New versions of pycountry do not raise
 exception when a language is not found, they return None. Ref #812

Signed-off-by: Jerome Flesch <jflesch@openpaper.work>
---
 paperwork-backend/paperwork_backend/util.py | 60 ++++++++-------------
 1 file changed, 23 insertions(+), 37 deletions(-)

diff --git a/paperwork-backend/paperwork_backend/util.py b/paperwork-backend/paperwork_backend/util.py
index 90fd0eb9..73701c8a 100644
--- a/paperwork-backend/paperwork_backend/util.py
+++ b/paperwork-backend/paperwork_backend/util.py
@@ -312,45 +312,31 @@ def find_language(lang_str=None, allow_none=False):
         lang_str = lang_str.split("_")[0]
 
     try:
-        return pycountry.pycountry.languages.get(name=lang_str.title())
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(iso_639_3_code=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(iso639_3_code=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(iso639_2T_code=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(iso639_1_code=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(terminology=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(bibliographic=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(alpha_3=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(alpha_2=lang_str)
-    except (KeyError, UnicodeDecodeError):
-        pass
-    try:
-        return pycountry.pycountry.languages.get(alpha2=lang_str)
+        r = pycountry.pycountry.languages.get(name=lang_str.title())
+        if r is not None:
+            return r
     except (KeyError, UnicodeDecodeError):
         pass
+
+    ATTRS = (
+        'iso_639_3_code',
+        'iso639_3_code',
+        'iso639_2T_code',
+        'iso639_1_code',
+        'terminology',
+        'bibliographic',
+        'alpha_3',
+        'alpha_2',
+        'alpha2'
+    )
+    for attr in ATTRS:
+        try:
+            r = pycountry.pycountry.languages.get(**{attr: lang_str})
+            if r is not None:
+                return r
+        except (KeyError, UnicodeDecodeError):
+            pass
+
     if allow_none:
         logger.warning("Unknown language [{}]".format(lang_str))
         return None
-- 
2.20.0

