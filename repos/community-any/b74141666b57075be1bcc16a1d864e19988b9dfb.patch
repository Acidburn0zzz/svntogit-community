From b74141666b57075be1bcc16a1d864e19988b9dfb Mon Sep 17 00:00:00 2001
From: Paul Chote <pchote@users.noreply.github.com>
Date: Thu, 18 May 2017 08:58:52 +0100
Subject: [PATCH] Implement a workaround for the mono 5.0 cursor enumerator
 bug.

---
 OpenRA.Game/Orders/UnitOrderGenerator.cs | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/OpenRA.Game/Orders/UnitOrderGenerator.cs b/OpenRA.Game/Orders/UnitOrderGenerator.cs
index 92862b8eb38..0a5b459709c 100644
--- a/OpenRA.Game/Orders/UnitOrderGenerator.cs
+++ b/OpenRA.Game/Orders/UnitOrderGenerator.cs
@@ -139,8 +139,15 @@ static UnitOrderResult OrderForUnit(Actor self, Target target, List<Actor> actor
 			if (mi.Modifiers.HasModifier(Modifiers.Alt))
 				modifiers |= TargetModifiers.ForceMove;
 
+			// The Select(x => x) is required to work around an issue on mono 5.0
+			// where calling OrderBy* on SelectManySingleSelectorIterator can in some
+			// circumstances (which we were unable to identify) replace entries in the
+			// enumeration with duplicates of other entries.
+			// Other action that replace the SelectManySingleSelectorIterator with a
+			// different enumerator type (e.g. .Where(true) or .ToList()) also work.
 			var orders = self.TraitsImplementing<IIssueOrder>()
 				.SelectMany(trait => trait.Orders.Select(x => new { Trait = trait, Order = x }))
+				.Select(x => x)
 				.OrderByDescending(x => x.Order.OrderPriority);
 
 			for (var i = 0; i < 2; i++)
