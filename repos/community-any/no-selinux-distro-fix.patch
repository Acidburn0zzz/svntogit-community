From 5cde83a7f8ec29f3aa8c214c6e74921cd734a387 Mon Sep 17 00:00:00 2001
From: Christian Kellner <christian@kellner.me>
Date: Thu, 17 Mar 2022 15:22:12 +0100
Subject: [PATCH] stages/selinux: directly call setfilecon

Instead of using `chcon`, directly call `selinux.setfilecon`. On
systems without SELinux support, i.e. coreutils was built without
<selinux.h> present, `chcon` will return `ENOTSUP` for all selinux
related calls like `setfilecon` even if the selinux libraries are
later installed. Therefore we directly call the library function
which should ensure that we don't error out as long as the library
is present.  The only other thing `chcon` is doing besides a cal to
the `setfilecon` method is to convert the context string to a
`contex_t` and back to validate it. This should not be needed since
the kernel will do this for us. On system without SELinux support
`context_new` will also not validate the context.
---
 stages/org.osbuild.selinux | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/stages/org.osbuild.selinux b/stages/org.osbuild.selinux
index 2ca277e7a..64d4fb66f 100755
--- a/stages/org.osbuild.selinux
+++ b/stages/org.osbuild.selinux
@@ -25,6 +25,8 @@ import pathlib
 import subprocess
 import sys
 
+import selinux
+
 import osbuild.api
 
 
@@ -60,7 +62,7 @@ def main(tree, options):
 
     for path, label in labels.items():
         fullpath = os.path.join(tree, path.lstrip("/"))
-        subprocess.run(["chcon", "-v", label, fullpath], check=True)
+        selinux.setfilecon(fullpath, label)
 
     if options.get("force_autorelabel", False):
         stamp = pathlib.Path(tree, ".autorelabel")
