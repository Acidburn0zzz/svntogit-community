diff -upr a/agent/cache/cache_test.go b/agent/cache/cache_test.go
--- a/agent/cache/cache_test.go	2018-11-14 23:37:47.000000000 +0100
+++ b/agent/cache/cache_test.go	2019-01-08 15:23:12.540631267 +0100
@@ -152,7 +152,6 @@ func TestCacheGet_blockingInitSameKey(t
 // Test that Get with different cache keys both block on initial value
 // but that the fetches were both properly called.
 func TestCacheGet_blockingInitDiffKeys(t *testing.T) {
-	t.Parallel()
 
 	require := require.New(t)
 
@@ -238,7 +237,6 @@ func TestCacheGet_blockingIndex(t *testi
 // Test a get with an index set will timeout if the fetch doesn't return
 // anything.
 func TestCacheGet_blockingIndexTimeout(t *testing.T) {
-	t.Parallel()
 
 	typ := TestType(t)
 	defer typ.AssertExpectations(t)
@@ -346,7 +344,6 @@ func TestCacheGet_emptyFetchResult(t *te
 // Test that a type registered with a periodic refresh will perform
 // that refresh after the timer is up.
 func TestCacheGet_periodicRefresh(t *testing.T) {
-	t.Parallel()
 
 	typ := TestType(t)
 	defer typ.AssertExpectations(t)
@@ -433,7 +430,6 @@ func TestCacheGet_periodicRefreshMultipl
 
 // Test that a refresh performs a backoff.
 func TestCacheGet_periodicRefreshErrorBackoff(t *testing.T) {
-	t.Parallel()
 
 	typ := TestType(t)
 	defer typ.AssertExpectations(t)
@@ -474,7 +470,6 @@ func TestCacheGet_periodicRefreshErrorBa
 
 // Test that a badly behaved RPC that returns 0 index will perform a backoff.
 func TestCacheGet_periodicRefreshBadRPCZeroIndexErrorBackoff(t *testing.T) {
-	t.Parallel()
 
 	typ := TestType(t)
 	defer typ.AssertExpectations(t)
diff -upr a/agent/cache-types/connect_ca_leaf_test.go b/agent/cache-types/connect_ca_leaf_test.go
--- a/agent/cache-types/connect_ca_leaf_test.go	2018-11-14 23:37:47.000000000 +0100
+++ b/agent/cache-types/connect_ca_leaf_test.go	2019-01-08 15:23:55.670339830 +0100
@@ -94,7 +94,6 @@ func TestConnectCALeaf_changingRoots(t *
 // Test that after an initial signing, an expiringLeaf will trigger a
 // blocking query to resign.
 func TestConnectCALeaf_expiringLeaf(t *testing.T) {
-	t.Parallel()
 
 	require := require.New(t)
 	rpc := TestRPC(t)
@@ -178,7 +177,7 @@ func TestConnectCALeaf_expiringLeaf(t *t
 // with a given token but can't if a client using that token was served a cert
 // generated under a different token (say the agent token).
 func TestConnectCALeaf_multipleClientsDifferentTokens(t *testing.T) {
-	t.Parallel()
+	t.Skip("disabled flaky test")
 
 	require := require.New(t)
 	rpc := TestRPC(t)
