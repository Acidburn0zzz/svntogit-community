--- a/trunk/qt5ct/src/qt5ct-qtplugin/qt5ctplatformtheme.cpp
+++ b/trunk/qt5ct/src/qt5ct-qtplugin/qt5ctplatformtheme.cpp
@@ -400,6 +400,26 @@
             customPalette.setColor(QPalette::Disabled, role, QColor(disabledColors.at(i)));
         }
     }
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
+    else if(activeColors.count() == QPalette::NColorRoles - 1 &&
+            inactiveColors.count() == QPalette::NColorRoles - 1 &&
+            disabledColors.count() == QPalette::NColorRoles - 1)
+    {
+        //old format compatibility
+        for (int i = 0; i < QPalette::NColorRoles - 1; i++)
+        {
+            QPalette::ColorRole role = QPalette::ColorRole(i);
+            customPalette.setColor(QPalette::Active, role, QColor(activeColors.at(i)));
+            customPalette.setColor(QPalette::Inactive, role, QColor(inactiveColors.at(i)));
+            customPalette.setColor(QPalette::Disabled, role, QColor(disabledColors.at(i)));
+        }
+        QColor textColor = customPalette.text().color();
+        textColor.setAlpha(128);
+        customPalette.setColor(QPalette::Active, QPalette::PlaceholderText, textColor);
+        customPalette.setColor(QPalette::Inactive, QPalette::PlaceholderText, textColor);
+        customPalette.setColor(QPalette::Disabled, QPalette::PlaceholderText, textColor);
+    }
+#endif
     else
     {
         customPalette = *QPlatformTheme::palette(SystemPalette); //load fallback palette
--- a/trunk/qt5ct/src/qt5ct/appearancepage.cpp
+++ b/trunk/qt5ct/src/qt5ct/appearancepage.cpp
@@ -425,6 +425,26 @@
             customPalette.setColor(QPalette::Disabled, role, QColor(disabledColors.at(i)));
         }
     }
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
+    else if(activeColors.count() == QPalette::NColorRoles - 1 &&
+            inactiveColors.count() == QPalette::NColorRoles - 1 &&
+            disabledColors.count() == QPalette::NColorRoles - 1)
+    {
+        //old format compatibility
+        for (int i = 0; i < QPalette::NColorRoles - 1; i++)
+        {
+            QPalette::ColorRole role = QPalette::ColorRole(i);
+            customPalette.setColor(QPalette::Active, role, QColor(activeColors.at(i)));
+            customPalette.setColor(QPalette::Inactive, role, QColor(inactiveColors.at(i)));
+            customPalette.setColor(QPalette::Disabled, role, QColor(disabledColors.at(i)));
+        }
+        QColor textColor = customPalette.text().color();
+        textColor.setAlpha(128);
+        customPalette.setColor(QPalette::Active, QPalette::PlaceholderText, textColor);
+        customPalette.setColor(QPalette::Inactive, QPalette::PlaceholderText, textColor);
+        customPalette.setColor(QPalette::Disabled, QPalette::PlaceholderText, textColor);
+    }
+#endif
     else
     {
         customPalette = palette(); //load fallback palette
--- a/trunk/qt5ct/src/qt5ct/paletteeditdialog.cpp
+++ b/trunk/qt5ct/src/qt5ct/paletteeditdialog.cpp
@@ -92,6 +92,9 @@
            << tr("Normal text") << tr("Bright text") << tr("Button text") << tr("Normal background") << tr("Window") << tr("Shadow")
            << tr("Highlight") << tr("Highlighted text")  << tr("Link")  << tr("Visited link")
            << tr("Alternate background") << tr("Default") << tr("Tooltip background")  << tr("Tooltip text");
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 12, 0))
+    labels << tr("Placeholder text");
+#endif
     m_ui->tableWidget->setVerticalHeaderLabels(labels);
 }
 
