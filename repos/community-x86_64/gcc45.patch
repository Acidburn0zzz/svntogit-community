#! /bin/sh /usr/share/dpatch/dpatch-run
## Description: fix builiding with gcc4.5
## Origin/Author: Ubuntu
## Bug: http://bugs.launchpad.net/bugs/756004
## 06_ftbfs_gcc45.dpatch by Andreas Moog <amoog@ubuntu.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: fix build with gcc 4.5

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' qgo-1.5.4-r3~/src/gamedialog.cpp qgo-1.5.4-r3/src/gamedialog.cpp
--- qgo-1.5.4-r3~/src/gamedialog.cpp	2011-04-12 20:03:12.000000000 +0200
+++ qgo-1.5.4-r3/src/gamedialog.cpp	2011-04-12 20:03:15.640382627 +0200
@@ -512,7 +512,7 @@
 		if (handicapSpin->value() != val.toInt())
 		{
 			handicapSpin->setValue(val.toInt());
-			handicapSpin->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			handicapSpin->setPaletteBackgroundColor(QColor("cyan"));
 		}
 		else
 			handicapSpin->unsetPalette();
@@ -521,7 +521,7 @@
 		if (boardSizeSpin->value() != val.toInt())
 		{
 			boardSizeSpin->setValue(val.toInt());
-			boardSizeSpin->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			boardSizeSpin->setPaletteBackgroundColor(QColor("cyan"));
 		}
 		else
 			boardSizeSpin->unsetPalette();
@@ -530,7 +530,7 @@
 		if (timeSpin->value() != val.toInt()/60)
 		{
 			timeSpin->setValue(val.toInt()/60);
-			timeSpin->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			timeSpin->setPaletteBackgroundColor(QColor("cyan"));
 		}
 		else
 			timeSpin->unsetPalette();
@@ -539,7 +539,7 @@
 		if (byoTimeSpin->value() != val.toInt()/60)
 		{
 			byoTimeSpin->setValue(val.toInt()/60);
-			byoTimeSpin->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			byoTimeSpin->setPaletteBackgroundColor(QColor("cyan"));
 		}
 		else
 			byoTimeSpin->unsetPalette();	
@@ -550,25 +550,25 @@
 		val = element(line,0," ");
 		if ( !(play_nigiri_button->isChecked()) && (val == "N"))
 		{
-			play_nigiri_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_white_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_black_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			play_nigiri_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_white_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_black_button->setPaletteBackgroundColor(QColor("cyan"));
 			play_nigiri_button->setChecked(true);
 
 		}
 		else if ( (play_black_button->isChecked()) && (val == "B"))
 		{
-			play_nigiri_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_white_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_black_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			play_nigiri_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_white_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_black_button->setPaletteBackgroundColor(QColor("cyan"));
 			play_white_button->setChecked(true);
 
 		}
 		else if ( (play_white_button->isChecked()) && (val == "W"))
 		{
-			play_nigiri_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_white_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
-			play_black_button->setPaletteBackgroundColor(QColor::QColor("cyan"));
+			play_nigiri_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_white_button->setPaletteBackgroundColor(QColor("cyan"));
+			play_black_button->setPaletteBackgroundColor(QColor("cyan"));
 			play_black_button->setChecked(true);
 
 		}
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' qgo-1.5.4-r3~/src/mainwin.cpp qgo-1.5.4-r3/src/mainwin.cpp
--- qgo-1.5.4-r3~/src/mainwin.cpp	2011-04-12 20:03:12.000000000 +0200
+++ qgo-1.5.4-r3/src/mainwin.cpp	2011-04-12 20:03:15.640382627 +0200
@@ -68,35 +68,35 @@
 {
 
 
-	prefsIcon= QPixmap::QPixmap(qembed_findImage("package_settings"));//QPixmap(ICON_PREFS);
+	prefsIcon= QPixmap(qembed_findImage("package_settings"));//QPixmap(ICON_PREFS);
 //	infoIcon= QPixmap(ICON_GAMEINFO);
-	exitIcon =  QPixmap::QPixmap(qembed_findImage("exit"));//QPixmap(ICON_EXIT);
-	fileNewboardIcon = QPixmap::QPixmap(qembed_findImage("newboard"));//QPixmap(ICON_FILENEWBOARD);
-	fileNewIcon = QPixmap::QPixmap(qembed_findImage("filenew"));//QPixmap(ICON_FILENEW);
-	fileOpenIcon = QPixmap::QPixmap(qembed_findImage("fileopen"));//QPixmap(ICON_FILEOPEN);
+	exitIcon =  QPixmap(qembed_findImage("exit"));//QPixmap(ICON_EXIT);
+	fileNewboardIcon = QPixmap(qembed_findImage("newboard"));//QPixmap(ICON_FILENEWBOARD);
+	fileNewIcon = QPixmap(qembed_findImage("filenew"));//QPixmap(ICON_FILENEW);
+	fileOpenIcon = QPixmap(qembed_findImage("fileopen"));//QPixmap(ICON_FILEOPEN);
 //	fileSaveIcon = QPixmap(ICON_FILESAVE);
 //	fileSaveAsIcon = QPixmap(ICON_FILESAVEAS);
 //	transformIcon = QPixmap(ICON_TRANSFORM);
 //	charIcon = QPixmap(ICON_CHARSET);
-	manualIcon = QPixmap::QPixmap(qembed_findImage("help"));//QPixmap(ICON_MANUAL);
+	manualIcon = QPixmap(qembed_findImage("help"));//QPixmap(ICON_MANUAL);
 //	autoplayIcon = QPixmap(ICON_AUTOPLAY);
-	connectedIcon = QPixmap::QPixmap(qembed_findImage("connected"));//QPixmap(ICON_CONNECTED);             
-	disconnectedIcon = QPixmap::QPixmap(qembed_findImage("connect_no"));//QPixmap(ICON_DISCONNECTED);       
-	OpenIcon = QPixmap::QPixmap(qembed_findImage("open"));//QPixmap(ICON_OPEN);              
-	LookingIcon = QPixmap::QPixmap(qembed_findImage("looking"));//QPixmap(ICON_LOOKING);
-	QuietIcon= QPixmap::QPixmap(qembed_findImage("quiet"));//QPixmap(ICON_QUIET);
-	NotOpenIcon = QPixmap::QPixmap(qembed_findImage("not_open"));//QPixmap(ICON_NOT_OPEN);
-	NotLookingIcon = QPixmap::QPixmap(qembed_findImage("not_looking"));//QPixmap(ICON_NOT_LOOKING);
-	NotQuietIcon= QPixmap::QPixmap(qembed_findImage("not_quiet"));//QPixmap(ICON_NOT_QUIET);       
-	RefreshPlayersIcon = QPixmap::QPixmap(qembed_findImage("refresh_players"));//QPixmap(ICON_REFRESH_PLAYERS);    
-	RefreshGamesIcon = QPixmap::QPixmap(qembed_findImage("refresh_games"));//QPixmap(ICON_REFRESH_GAMES);        
-	ComputerPlayIcon = QPixmap::QPixmap(qembed_findImage("computerplay"));//QPixmap(ICON_COMPUTER_PLAY);
-	qgoIcon = QPixmap::QPixmap(qembed_findImage("Bowl"));//QPixmap(ICON_COMPUTER_PLAY);  
-	NotSeekingIcon = QPixmap::QPixmap(qembed_findImage("not_seeking"));
-	seekingIcon[0] = QPixmap::QPixmap(qembed_findImage("seeking1"));
-	seekingIcon[1] = QPixmap::QPixmap(qembed_findImage("seeking2"));
-	seekingIcon[2] = QPixmap::QPixmap(qembed_findImage("seeking3"));
-	seekingIcon[3] = QPixmap::QPixmap(qembed_findImage("seeking4"));
+	connectedIcon = QPixmap(qembed_findImage("connected"));//QPixmap(ICON_CONNECTED);             
+	disconnectedIcon = QPixmap(qembed_findImage("connect_no"));//QPixmap(ICON_DISCONNECTED);       
+	OpenIcon = QPixmap(qembed_findImage("open"));//QPixmap(ICON_OPEN);              
+	LookingIcon = QPixmap(qembed_findImage("looking"));//QPixmap(ICON_LOOKING);
+	QuietIcon= QPixmap(qembed_findImage("quiet"));//QPixmap(ICON_QUIET);
+	NotOpenIcon = QPixmap(qembed_findImage("not_open"));//QPixmap(ICON_NOT_OPEN);
+	NotLookingIcon = QPixmap(qembed_findImage("not_looking"));//QPixmap(ICON_NOT_LOOKING);
+	NotQuietIcon= QPixmap(qembed_findImage("not_quiet"));//QPixmap(ICON_NOT_QUIET);       
+	RefreshPlayersIcon = QPixmap(qembed_findImage("refresh_players"));//QPixmap(ICON_REFRESH_PLAYERS);    
+	RefreshGamesIcon = QPixmap(qembed_findImage("refresh_games"));//QPixmap(ICON_REFRESH_GAMES);        
+	ComputerPlayIcon = QPixmap(qembed_findImage("computerplay"));//QPixmap(ICON_COMPUTER_PLAY);
+	qgoIcon = QPixmap(qembed_findImage("Bowl"));//QPixmap(ICON_COMPUTER_PLAY);  
+	NotSeekingIcon = QPixmap(qembed_findImage("not_seeking"));
+	seekingIcon[0] = QPixmap(qembed_findImage("seeking1"));
+	seekingIcon[1] = QPixmap(qembed_findImage("seeking2"));
+	seekingIcon[2] = QPixmap(qembed_findImage("seeking3"));
+	seekingIcon[3] = QPixmap(qembed_findImage("seeking4"));
 
 	// init
 
@@ -576,7 +576,7 @@
 	if (e->timerId() == seekButtonTimer)
 	{	
 		imagecounter = (imagecounter+1) % 4;
-		toolSeek->setIconSet(QIconSet::QIconSet(seekingIcon[imagecounter]));
+		toolSeek->setIconSet(QIconSet(seekingIcon[imagecounter]));
 		return;
 	}
 
@@ -2950,17 +2950,17 @@
 	//tb->setProperty( "geometry", QRect(0, 0, 20, 20));
 
 	//added the icons
-	refreshPlayers->setIconSet(QIconSet::QIconSet(RefreshPlayersIcon));
-	refreshGames->setIconSet(QIconSet::QIconSet(RefreshGamesIcon));
-	fileNew->setIconSet(QIconSet::QIconSet(fileNewIcon));
-	fileNewBoard->setIconSet(QIconSet::QIconSet(fileNewboardIcon));
-	fileOpen->setIconSet(QIconSet::QIconSet(fileOpenIcon));
-	fileQuit->setIconSet(QIconSet::QIconSet(exitIcon));
-	computerPlay->setIconSet(QIconSet::QIconSet(ComputerPlayIcon));
-	Connect->setIconSet(QIconSet::QIconSet(connectedIcon));
-	Disconnect->setIconSet(QIconSet::QIconSet(disconnectedIcon));
-	helpManual->setIconSet(QIconSet::QIconSet(manualIcon));
-	setPreferences->setIconSet(QIconSet::QIconSet(prefsIcon));
+	refreshPlayers->setIconSet(QIconSet(RefreshPlayersIcon));
+	refreshGames->setIconSet(QIconSet(RefreshGamesIcon));
+	fileNew->setIconSet(QIconSet(fileNewIcon));
+	fileNewBoard->setIconSet(QIconSet(fileNewboardIcon));
+	fileOpen->setIconSet(QIconSet(fileOpenIcon));
+	fileQuit->setIconSet(QIconSet(exitIcon));
+	computerPlay->setIconSet(QIconSet(ComputerPlayIcon));
+	Connect->setIconSet(QIconSet(connectedIcon));
+	Disconnect->setIconSet(QIconSet(disconnectedIcon));
+	helpManual->setIconSet(QIconSet(manualIcon));
+	setPreferences->setIconSet(QIconSet(prefsIcon));
 	setIcon(qgoIcon);
 
   UserToolbar->show();
@@ -3218,7 +3218,7 @@
 	toolSeek->setOn(false);
 	toolSeek->setPopup(seekMenu);
 	toolSeek->setPopupDelay(1);
-	toolSeek->setIconSet(QIconSet::QIconSet(NotSeekingIcon));
+	toolSeek->setIconSet(QIconSet(NotSeekingIcon));
 	killTimer(seekButtonTimer);
 	seekButtonTimer = 0;
 }
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' qgo-1.5.4-r3~/src/qgtp.cpp qgo-1.5.4-r3/src/qgtp.cpp
--- qgo-1.5.4-r3~/src/qgtp.cpp	2011-04-12 20:03:12.000000000 +0200
+++ qgo-1.5.4-r3/src/qgtp.cpp	2011-04-12 20:03:22.360029899 +0200
@@ -277,7 +277,7 @@
 	_cpt++;
 
 	qDebug(QString("flush -> %1").arg(s));
-    programProcess->writeToStdin(QString::QString(s));
+    programProcess->writeToStdin(QString(s));
 	
 	
 }
