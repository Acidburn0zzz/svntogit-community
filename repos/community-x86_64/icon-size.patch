diff --git a/src/global_util/public_func.cpp b/src/global_util/public_func.cpp
index 1875727..8d74073 100644
--- a/src/global_util/public_func.cpp
+++ b/src/global_util/public_func.cpp
@@ -27,7 +27,7 @@
 #include <QFile>
 #include "constants.h"
 
-QPixmap loadPixmap(const QString &file)
+QPixmap loadPixmap(const QString &file, const QSize& size)
 {
 
    if(!QFile::exists(file)){
@@ -39,11 +39,11 @@
 
     QPixmap pixmap;
 
-    if (!qFuzzyCompare(ratio, devicePixel)) {
+    if (!qFuzzyCompare(ratio, devicePixel) || size.isValid()) {
         QImageReader reader;
         reader.setFileName(qt_findAtNxFile(file, devicePixel, &ratio));
         if (reader.canRead()) {
-            reader.setScaledSize(reader.size() * (devicePixel / ratio));
+            reader.setScaledSize((size.isNull() ? reader.size() : reader.size().scaled(size, Qt::KeepAspectRatio)) * (devicePixel / ratio));
             pixmap = QPixmap::fromImage(reader.read());
             pixmap.setDevicePixelRatio(devicePixel);
         }
diff --git a/src/global_util/public_func.h b/src/global_util/public_func.h
index 93da78f..ee5751e 100644
--- a/src/global_util/public_func.h
+++ b/src/global_util/public_func.h
@@ -33,7 +33,7 @@
 #include <QSettings>
 #include <QString>
 
-QPixmap loadPixmap(const QString &file);
+QPixmap loadPixmap(const QString &file, const QSize &size = QSize());
 
 template <typename T>
 T findValueByQSettings(const QStringList &configFiles,
diff --git a/src/widgets/logowidget.cpp b/src/widgets/logowidget.cpp
index 820dc3b..32b2a97 100644
--- a/src/widgets/logowidget.cpp
+++ b/src/widgets/logowidget.cpp
@@ -37,9 +37,12 @@
 
 DCORE_USE_NAMESPACE
 
-const QPixmap systemLogo()
+#define PIXMAP_WIDTH 128
+#define PIXMAP_HEIGHT 132 /* SessionBaseWindow */
+
+const QPixmap systemLogo(const QSize& size)
 {
-    return loadPixmap(DSysInfo::distributionOrgLogo(DSysInfo::Distribution, DSysInfo::Transparent, ":img/logo.svg"));
+    return loadPixmap(DSysInfo::distributionOrgLogo(DSysInfo::Distribution, DSysInfo::Transparent, ":img/logo.svg"), size);
 }
 
 LogoWidget::LogoWidget(QWidget* parent)
@@ -50,12 +53,16 @@ LogoWidget::LogoWidget(QWidget* parent)
 }
 
 void LogoWidget::initUI() {
-//    setFixedSize(240, 40);
-
     m_logoLabel = new QLabel();
-    m_logoLabel->setPixmap(systemLogo());
+    m_logoLabel->setPixmap(
+                []() -> QPixmap {
+                    const QPixmap& p = systemLogo(QSize());
+                    const bool result = p.width() < PIXMAP_WIDTH && p.height() < PIXMAP_HEIGHT;
+                    return result
+                    ? p
+                    : systemLogo(QSize(PIXMAP_WIDTH, PIXMAP_HEIGHT));
+                }());
     m_logoLabel->setObjectName("Logo");
-    m_logoLabel->setFixedSize(128, 48);
     //修复社区版deepin的显示不全的问题 2020/04/11
     m_logoLabel->setScaledContents(true);
 
diff --git a/src/widgets/useravatar.cpp b/src/widgets/useravatar.cpp
index d18f0d4..2566eba 100644
--- a/src/widgets/useravatar.cpp
+++ b/src/widgets/useravatar.cpp
@@ -27,6 +27,7 @@
 #include "dthememanager.h"
 #include <QUrl>
 #include <QFile>
+#include <QPainterPath>
 
 UserAvatar::UserAvatar(QWidget *parent, bool deleteable) :
     QPushButton(parent), m_deleteable(deleteable)
