# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=hls-brittany-plugin
pkgname=haskell-hls-brittany-plugin
pkgver=1.0.0.1
pkgrel=9
pkgdesc="Integration with the Brittany code formatter"
url="https://haskellwingman.dev"
license=("Apache")
arch=('x86_64')
depends=('ghc-libs' 'haskell-brittany' 'haskell-ghc' 'haskell-ghcide' 'haskell-hls-plugin-api'
         'haskell-lens' 'haskell-lsp-types')
makedepends=('ghc' 'uusi' 'haskell-hls-test-utils')
checkdepends=('git')
#source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
source=("https://github.com/haskell/haskell-language-server/archive/1.1.0/haskell-language-server-1.1.0.tar.gz")
sha512sums=('05f724ec6209a4c30e260b8e9f945c5bc58be6b98458ea11ba3b297fa74fecbec37dc292d9aeda2d6dd5a8f24c4125f6d20afbb35eeec6335c9ea7138ed89e52')

prepare() {
  cd haskell-language-server-1.1.0/plugins/$_hkgname
  gen-setup
}

build() {
  cd haskell-language-server-1.1.0/plugins/$_hkgname

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie'

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd haskell-language-server-1.1.0/plugins/$_hkgname
  runhaskell Setup test --show-details=direct
}

package() {
  cd haskell-language-server-1.1.0/plugins/$_hkgname

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
