# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Arch Haskell Team <arch-haskell@haskell.org>

pkgname=stack
pkgver=2.1.3
pkgrel=13
pkgdesc="The Haskell Tool Stack"
url="https://github.com/commercialhaskell/stack"
license=("BSD")
arch=('x86_64')
depends=('ghc-libs' 'haskell-aeson' 'haskell-annotated-wl-pprint' 'haskell-ansi-terminal'
         'haskell-async' 'haskell-attoparsec' 'haskell-base64-bytestring' 'haskell-colour'
         'haskell-conduit' 'haskell-conduit-extra' 'haskell-cryptonite' 'haskell-cryptonite-conduit'
         'haskell-echo' 'haskell-exceptions' 'haskell-extra' 'haskell-file-embed' 'haskell-filelock'
         'haskell-fsnotify' 'haskell-generic-deriving' 'haskell-githash' 'haskell-hackage-security'
         'haskell-hashable' 'haskell-hi-file-parser' 'haskell-hpack' 'haskell-http-client'
         'haskell-http-client-tls' 'haskell-http-conduit' 'haskell-http-download'
         'haskell-http-types' 'haskell-memory' 'haskell-microlens' 'haskell-mintty'
         'haskell-mono-traversable' 'haskell-mustache' 'haskell-neat-interpolation'
         'haskell-network-uri' 'haskell-open-browser' 'haskell-optparse-applicative'
         'haskell-optparse-generic' 'haskell-optparse-simple' 'haskell-pantry' 'haskell-path'
         'haskell-path-io' 'haskell-persistent' 'haskell-persistent-sqlite'
         'haskell-persistent-template' 'haskell-primitive' 'haskell-project-template'
         'haskell-regex-applicative-text' 'haskell-resource-pool' 'haskell-resourcet'
         'haskell-retry' 'haskell-rio' 'haskell-rio-prettyprint' 'haskell-split'
         'haskell-streaming-commons' 'haskell-tar' 'haskell-temporary' 'haskell-terminal-size'
         'haskell-text-metrics' 'haskell-th-reify-many' 'haskell-tls' 'haskell-typed-process'
         'haskell-unicode-transforms' 'haskell-unix-compat' 'haskell-unliftio'
         'haskell-unordered-containers' 'haskell-vector' 'haskell-yaml' 'haskell-zip-archive'
         'haskell-zlib' 'haskell-bindings-uname')
makedepends=('ghc' 'git' 'haskell-quickcheck' 'haskell-hspec' 'haskell-raw-strings-qq'
             'haskell-smallcheck')
checkdepends=('cabal-install')
conflicts=('haskell-stack')
replaces=('haskell-stack')
install="stack.install"
source=("git+https://github.com/commercialhaskell/stack.git#tag=v$pkgver"
        https://github.com/commercialhaskell/stack/commit/62c24fa0552dc722260f1cee75325145e837ab6a.patch)
sha512sums=('SKIP'
            '99bb04cf6581a8d712413822f834856b036b37ab2ae41307e82a7064b12cdfa43c6ccc60adfa870057f9ba197e1ae4eda144a7088306630400c0798a2b60d9c6')

prepare() {
  cd $pkgname
  patch -p1 -i ../62c24fa0552dc722260f1cee75325145e837ab6a.patch || :
  hpack
  sed -i -e '/semigroups/d' $pkgname.cabal

  sed -i '1i {-# LANGUAGE UndecidableInstances #-}' src/Stack/Storage/{User,Project}.hs
}

build() {
  cd $pkgname

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir="/usr/share/doc/${pkgname}" --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
      -f-disable-git-info -f-integration-tests -f-static -f-hide-dependency-versions -f-supported-build
  runhaskell Setup build
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd $pkgname
  # cabal update
  LD_LIBRARY_PATH="$PWD"/dist/build PATH="$PWD"/dist/build/stack:"$PATH" runhaskell Setup test
  # Integration tests will result in 4 failures on Arch currently
}

package() {
  cd $pkgname

  install -D -m744 register.sh   "${pkgdir}/usr/share/haskell/register/${pkgname}.sh"
  install -D -m744 unregister.sh "${pkgdir}/usr/share/haskell/unregister/${pkgname}.sh"
  runhaskell Setup copy --destdir="${pkgdir}"
  install -D -m644 "LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  rm -f "${pkgdir}/usr/share/doc/${pkgname}/LICENSE"

  LD_PRELOAD=$(ls "$pkgdir"/usr/lib/libHSstack-*-ghc*.so) "${pkgdir}"/usr/bin/stack --bash-completion-script /usr/bin/stack > stack_completion_script
  install -Dm644 stack_completion_script "${pkgdir}/usr/share/bash-completion/completions/stack"
}
