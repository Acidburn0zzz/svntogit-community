From e6c82d85aac825e8a4b87b736cc416a479f19435 Mon Sep 17 00:00:00 2001
From: Hans Schoenemann <hannes@mathematik.uni-kl.de>
Date: Thu, 9 Mar 2017 11:58:01 +0100
Subject: [PATCH] p_Invers is ONLY a helper for p_Series (see jet): now static

---
 kernel/polys.h                      |  1 -
 libpolys/polys/monomials/p_polys.cc | 32 ++++++++++++++++----------------
 libpolys/polys/monomials/p_polys.h  |  3 ---
 4 files changed, 17 insertions(+), 20 deletions(-)

diff --git a/kernel/polys.h b/kernel/polys.h
index 3184f60..c646159 100644
--- a/kernel/polys.h
+++ b/kernel/polys.h
@@ -352,7 +352,6 @@ inline void pNorm(poly p, const ring R = currRing){ p_Norm(p, R); }
 #define   pJetW(p,m,iv) p_JetW(p,m,iv,currRing)
 #define   pMinDeg(p,w) p_MinDeg(p,w,currRing)
 #define   pSeries(n,p,u,w) p_Series(n,p,u,w,currRing)
-#define   pInvers(n,p,w) p_Invers(n,p,w,currRing)
 // maximum weigthed degree of all monomials of p, w is indexed from
 // 1..pVariables
 
diff --git a/libpolys/polys/monomials/p_polys.cc b/libpolys/polys/monomials/p_polys.cc
index ad4ab52..aab0d35 100644
--- a/libpolys/polys/monomials/p_polys.cc
+++ b/libpolys/polys/monomials/p_polys.cc
@@ -4313,22 +4313,7 @@ int p_MinDeg(poly p,intvec *w, const ring R)
 }
 
 /***************************************************************/
-
-poly p_Series(int n,poly p,poly u, intvec *w, const ring R)
-{
-  short *ww=iv2array(w,R);
-  if(p!=NULL)
-  {
-    if(u==NULL)
-      p=p_JetW(p,n,ww,R);
-    else
-      p=p_JetW(p_Mult_q(p,p_Invers(n-p_MinDeg(p,w,R),u,w,R),R),n,ww,R);
-  }
-  omFreeSize((ADDRESS)ww,(rVar(R)+1)*sizeof(short));
-  return p;
-}
-
-poly p_Invers(int n,poly u,intvec *w, const ring R)
+static poly p_Invers(int n,poly u,intvec *w, const ring R)
 {
   if(n<0)
     return NULL;
@@ -4356,6 +4341,21 @@ poly p_Invers(int n,poly u,intvec *w, const ring R)
   return v;
 }
 
+
+poly p_Series(int n,poly p,poly u, intvec *w, const ring R)
+{
+  short *ww=iv2array(w,R);
+  if(p!=NULL)
+  {
+    if(u==NULL)
+      p=p_JetW(p,n,ww,R);
+    else
+      p=p_JetW(p_Mult_q(p,p_Invers(n-p_MinDeg(p,w,R),u,w,R),R),n,ww,R);
+  }
+  omFreeSize((ADDRESS)ww,(rVar(R)+1)*sizeof(short));
+  return p;
+}
+
 BOOLEAN p_EqualPolys(poly p1,poly p2, const ring r)
 {
   while ((p1 != NULL) && (p2 != NULL))
diff --git a/libpolys/polys/monomials/p_polys.h b/libpolys/polys/monomials/p_polys.h
index 498f608..3f201b1 100644
--- a/libpolys/polys/monomials/p_polys.h
+++ b/libpolys/polys/monomials/p_polys.h
@@ -2008,9 +2008,6 @@ poly p_PermPoly (poly p, const int * perm,const ring OldRing, const ring dst,
 
 /*----------------------------------------------------*/
 poly p_Series(int n,poly p,poly u, intvec *w, const ring R);
-poly p_Invers(int n,poly u,intvec *w, const ring R);
-
-
 
 /*----------------------------------------------------*/
 int   p_Var(poly mi, const ring r);
