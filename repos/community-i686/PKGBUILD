# $Id$
# Maintainer: schuay <jakob.gruber@gmail.com>
# Contributor: Brad Fanella <bradfanella@archlinux.us>
# Contributor: Corrado Primier <bardo@aur.archlinux.org>
# Contributor: danst0 <danst0@west.de>

# Build order: avr-binutils -> avr-gcc -> avr-libc

pkgname=avr-binutils
pkgver=2.23
pkgrel=2
_pkgname=binutils
pkgdesc="A set of programs to assemble and manipulate binary and object files for the avr architecture"
arch=('i686' 'x86_64')
url="http://www.gnu.org/software/binutils/"
license=('GPL')
depends=('glibc>=2.16' 'zlib')
provides=("binutils-avr=$pkgver")
replaces=('binutils-avr')
options=('!libtool' '!distcc' '!ccache')
source=("ftp://ftp.gnu.org/gnu/binutils/binutils-${pkgver}.tar.gz"
        "avr-size.patch")

_builddir=binutils-build

build() {
    cd ${srcdir}/${_pkgname}-${pkgver}

    # See https://bugs.archlinux.org/task/32504
    patch -Np0 < ${srcdir}/avr-size.patch

    config_guess=$(./config.guess)

    cd ${srcdir}
    rm -rf ${_builddir}
    mkdir ${_builddir} && cd ${_builddir}

    [[ $CARCH == "x86_64" ]] && CONFIGFLAG="--enable-64-bit-bfd --disable-multilib"

    ${srcdir}/${_pkgname}-${pkgver}/configure \
        --prefix=/usr \
        --build=${config_guess} \
        --disable-nls \
        --enable-install-libbfd \
        --includedir=/usr/${config_guess}/include \
        --infodir=/usr/share/info \
        --libdir=/usr/lib \
        --mandir=/usr/share/man \
        --target=avr \
        $CONFIGFLAG

    # This checks the host environment and makes sure all the necessary tools are available to compile Binutils.
    make configure-host

    make tooldir=${pkgdir}/usr
}

package() {
    cd ${srcdir}/${_builddir}

    make DESTDIR=${pkgdir} tooldir=/usr install

    rm -f ${pkgdir}/usr/lib/libiberty.a

    for bin in ar as nm objcopy objdump ranlib strip ; do
        rm -f ${pkgdir}/usr/bin/${bin}
    done

    for info in as bfd binutils configure gprof ld standards; do
        mv ${pkgdir}/usr/share/info/${info}.info ${pkgdir}/usr/share/info/avr-${info}.info
    done
}

md5sums=('ed58f50d8920c3f1d9cb110d5c972c27'
         '573769ec1107d1bfed78680edd7ae63f')
