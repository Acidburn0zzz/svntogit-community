commit 7afc43a4bdd6eefd6637e17d3f84f70bdcee28f2
Author: Felix Yan <felixonmars@archlinux.org>
Date:   Mon Jul 27 20:19:24 2020 +0800

    Add support for file's builtin magic module
    
    file's builtin magic module has a somewhat different API, and it's not
    co-installable with pypi:python-magic as both has the same name. Adding
    a fallback logic here makes mocket work with either one.
    
    All related tests are passing here.

diff --git a/mocket/mockhttp.py b/mocket/mockhttp.py
index 7f9a484..70da11c 100644
--- a/mocket/mockhttp.py
+++ b/mocket/mockhttp.py
@@ -87,9 +87,16 @@ class Response(object):
         if not self.is_file_object:
             self.headers["Content-Type"] = "text/plain; charset=utf-8"
         elif self.magic:
-            self.headers["Content-Type"] = decode_from_bytes(
-                magic.from_buffer(self.body, mime=True)
-            )
+            if hasattr(self.magic, "from_buffer"):
+                # PyPI python-magic
+                self.headers["Content-Type"] = decode_from_bytes(
+                    magic.from_buffer(self.body, mime=True)
+                )
+            else:
+                # file's builtin python wrapper
+                _magic = magic.open(magic.MAGIC_MIME)
+                _magic.load()
+                self.headers["Content-Type"] = _magic.buffer(self.body)
 
     def set_extra_headers(self, headers):
         for k, v in headers.items():
diff --git a/tests/main/test_http.py b/tests/main/test_http.py
index 2244a4c..9ef33c8 100644
--- a/tests/main/test_http.py
+++ b/tests/main/test_http.py
@@ -235,7 +235,7 @@ class HttpEntryTestCase(HttpTestCase):
         self.assertEqual(remote_content, local_content)
         self.assertEqual(len(remote_content), len(local_content))
         self.assertEqual(int(r.headers["Content-Length"]), len(local_content))
-        self.assertEqual(r.headers["Content-Type"], "image/png")
+        self.assertIn(r.headers["Content-Type"], ("image/png", "image/png; charset=binary"))
 
     @mocketize
     def test_file_object_with_no_lib_magic(self):
