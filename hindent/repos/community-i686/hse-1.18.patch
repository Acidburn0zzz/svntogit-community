From 370ecdc957d70e39073c0fd707926d860cd927bb Mon Sep 17 00:00:00 2001
From: Moritz Kiefer <moritz.kiefer@purelyfunctional.org>
Date: Sun, 31 Jul 2016 20:24:04 +0200
Subject: [PATCH] Update to haskell-src-exts 1.18

---
 hindent.cabal                     |  2 +-
 src/HIndent.hs                    |  2 +-
 src/HIndent/Comments.hs           |  2 +-
 src/HIndent/Pretty.hs             | 41 ++++++++++++++++++++++++++-------------
 src/HIndent/Styles/ChrisDone.hs   |  6 +++---
 src/HIndent/Styles/Cramer.hs      |  2 +-
 src/HIndent/Styles/Gibiansky.hs   |  2 +-
 src/HIndent/Styles/JohanTibell.hs |  2 +-
 src/main/Main.hs                  |  2 +-
 stack.yaml                        |  4 +++-
 10 files changed, 41 insertions(+), 24 deletions(-)

diff --git a/hindent.cabal b/hindent.cabal
index 645ac4c..c7d304f 100644
--- a/hindent.cabal
+++ b/hindent.cabal
@@ -45,7 +45,7 @@ library
                      HIndent.Styles.Cramer
   build-depends:     base >= 4.7 && <5
                    , containers
-                   , haskell-src-exts >= 1.17
+                   , haskell-src-exts >= 1.18
                    , monad-loops
                    , mtl
                    , text
diff --git a/src/HIndent.hs b/src/HIndent.hs
index a2d9cc3..f80edbf 100644
--- a/src/HIndent.hs
+++ b/src/HIndent.hs
@@ -49,7 +49,7 @@ import qualified Data.Text.Lazy as T hiding (singleton)
 import           Data.Text.Lazy.Builder (Builder)
 import qualified Data.Text.Lazy.Builder as T
 import qualified Data.Text.Lazy.IO as T
-import           Language.Haskell.Exts.Annotated hiding (Style, prettyPrint, Pretty, style, parse)
+import           Language.Haskell.Exts hiding (Style, prettyPrint, Pretty, style, parse)
 
 data CodeBlock = HaskellSource Text
                | CPPDirectives Text
diff --git a/src/HIndent/Comments.hs b/src/HIndent/Comments.hs
index 4cfce4e..82cd5f6 100644
--- a/src/HIndent/Comments.hs
+++ b/src/HIndent/Comments.hs
@@ -12,7 +12,7 @@ import Data.Data
 import qualified Data.Map.Strict as M
 import Data.Traversable
 import HIndent.Types
-import Language.Haskell.Exts.Annotated hiding (Style,prettyPrint,Pretty,style,parse)
+import Language.Haskell.Exts hiding (Style,prettyPrint,Pretty,style,parse)
 
 -- Order by start of span, larger spans before smaller spans.
 newtype OrderByStart =
diff --git a/src/HIndent/Pretty.hs b/src/HIndent/Pretty.hs
index 7dce814..5770fea 100644
--- a/src/HIndent/Pretty.hs
+++ b/src/HIndent/Pretty.hs
@@ -70,6 +70,7 @@ import           Control.Monad.State.Strict hiding (state)
 import           Data.Int
 import           Data.List
 import           Data.Maybe
+import           Data.Foldable (traverse_)
 import           Data.Monoid hiding (Alt)
 import           Data.Text (Text)
 import qualified Data.Text as T
@@ -78,8 +79,8 @@ import           Data.Text.Lazy.Builder (Builder)
 import qualified Data.Text.Lazy.Builder as T
 import           Data.Text.Lazy.Builder.Int
 import           Data.Typeable
-import qualified Language.Haskell.Exts.Annotated as P
-import           Language.Haskell.Exts.Annotated.Syntax
+import qualified Language.Haskell.Exts as P
+import           Language.Haskell.Exts.Syntax
 import           Language.Haskell.Exts.SrcLoc
 import           Prelude hiding (exp)
 
@@ -571,8 +572,9 @@ instance Pretty Type where
         parens (do pretty ty
                    write " :: "
                    pretty k)
-      TyBang _ bangty right ->
-        do pretty bangty
+      TyBang _ bangty unpackty right ->
+        do pretty unpackty
+           pretty bangty
            pretty right
       TyEquals _ left right ->
         do pretty left
@@ -934,7 +936,13 @@ instance Pretty BangType where
   prettyInternal x =
     case x of
       BangedTy _ -> write "!"
-      UnpackedTy _ -> write "{-# UNPACK #-} !"
+      LazyTy _ -> write "~"
+      NoStrictAnnot _ -> pure ()
+
+instance Pretty Unpackedness where
+  prettyInternal (Unpack _) = write "{-# UNPACK -#}"
+  prettyInternal (NoUnpack _) = write "{-# NOUNPACK -#}"
+  prettyInternal (NoUnpackPragma _) = pure ()
 
 instance Pretty Binds where
   prettyInternal x =
@@ -955,15 +963,12 @@ instance Pretty ClassDecl where
                                Just kind ->
                                  do write " :: "
                                     pretty kind)))
-      ClsTyFam _ h mkind ->
+      ClsTyFam _ h mkind minj ->
         depend (write "type ")
                (depend (pretty h)
-                       (case mkind of
-                          Nothing -> return ()
-                          Just kind ->
-                            do write " :: "
-                               pretty kind))
-      ClsTyDef _ this that ->
+                       (depend (traverse_ (\kind -> write " :: " >> pretty kind) mkind)
+                               (traverse_ pretty minj)))
+      ClsTyDef _ (TypeEqn _ this that) ->
         do write "type "
            pretty this
            write " = "
@@ -1021,6 +1026,9 @@ instance Pretty GuardedRhs where
            swing (write " " >> rhsSeparator >> write " ")
                  (pretty e)
 
+instance Pretty InjectivityInfo where
+  prettyInternal x = pretty' x
+
 instance Pretty InstDecl where
   prettyInternal i =
     case i of
@@ -1245,6 +1253,10 @@ instance Pretty FunDep where
 instance Pretty Kind where
   prettyInternal = pretty'
 
+instance Pretty ResultSig where
+  prettyInternal (KindSig _ kind) = pretty kind
+  prettyInternal (TyVarSig _ tyVarBind) = pretty tyVarBind
+
 instance Pretty Literal where
   prettyInternal (String _ _ rep) = do
     write "\""
@@ -1313,7 +1325,10 @@ instance Pretty ImportSpec where
   prettyInternal = pretty'
 
 instance Pretty WarningText where
-  prettyInternal = pretty'
+  prettyInternal (DeprText _ s) =
+    write "{-# DEPRECATED " >> string s >> write " #-}"
+  prettyInternal (WarnText _ s) =
+    write "{-# WARNING " >> string s >> write " #-}"
 
 instance Pretty ExportSpecList where
   prettyInternal (ExportSpecList _ es) =
diff --git a/src/HIndent/Styles/ChrisDone.hs b/src/HIndent/Styles/ChrisDone.hs
index 215eb0d..610a403 100644
--- a/src/HIndent/Styles/ChrisDone.hs
+++ b/src/HIndent/Styles/ChrisDone.hs
@@ -16,9 +16,9 @@ import Control.Monad.Loops
 import Control.Monad.State.Class
 import Data.Int
 import Data.Maybe
-import Language.Haskell.Exts.Annotated (parseExpWithComments)
-import Language.Haskell.Exts.Annotated.Fixity
-import Language.Haskell.Exts.Annotated.Syntax
+import Language.Haskell.Exts (parseExpWithComments)
+import Language.Haskell.Exts.Fixity
+import Language.Haskell.Exts.Syntax
 import Language.Haskell.Exts.Parser (ParseResult(..))
 import Prelude hiding (exp)
 import Data.Monoid
diff --git a/src/HIndent/Styles/Cramer.hs b/src/HIndent/Styles/Cramer.hs
index 5e5c4e0..4dfc85e 100644
--- a/src/HIndent/Styles/Cramer.hs
+++ b/src/HIndent/Styles/Cramer.hs
@@ -12,7 +12,7 @@ import Control.Monad.State.Strict (MonadState, get, gets, put)
 import Data.List (intersperse, sortOn)
 import Data.Maybe (catMaybes, isJust, mapMaybe)
 
-import Language.Haskell.Exts.Annotated.Syntax
+import Language.Haskell.Exts.Syntax
 import Language.Haskell.Exts.Comments
 import Language.Haskell.Exts.SrcLoc
 import Language.Haskell.Exts (prettyPrint)
diff --git a/src/HIndent/Styles/Gibiansky.hs b/src/HIndent/Styles/Gibiansky.hs
index e3b543e..89a6509 100644
--- a/src/HIndent/Styles/Gibiansky.hs
+++ b/src/HIndent/Styles/Gibiansky.hs
@@ -15,7 +15,7 @@ import           Data.Typeable
 import           HIndent.Pretty
 import           HIndent.Types
 
-import           Language.Haskell.Exts.Annotated.Syntax
+import           Language.Haskell.Exts.Syntax
 import           Language.Haskell.Exts.SrcLoc
 import           Language.Haskell.Exts.Pretty (prettyPrint)
 import           Language.Haskell.Exts.Comments
diff --git a/src/HIndent/Styles/JohanTibell.hs b/src/HIndent/Styles/JohanTibell.hs
index f348d0d..a0755dc 100644
--- a/src/HIndent/Styles/JohanTibell.hs
+++ b/src/HIndent/Styles/JohanTibell.hs
@@ -21,7 +21,7 @@ import Data.Maybe
 import HIndent.Pretty
 import HIndent.Styles.ChrisDone (infixApp)
 import HIndent.Types
-import Language.Haskell.Exts.Annotated.Syntax
+import Language.Haskell.Exts.Syntax
 import Prelude hiding (exp)
 
 --------------------------------------------------------------------------------
diff --git a/src/main/Main.hs b/src/main/Main.hs
index 1ea05d2..2913728 100644
--- a/src/main/Main.hs
+++ b/src/main/Main.hs
@@ -21,7 +21,7 @@ import           Data.Version (showVersion)
 import           Descriptive
 import           Descriptive.Options
 import           GHC.Tuple
-import           Language.Haskell.Exts.Annotated hiding (Style,style)
+import           Language.Haskell.Exts hiding (Style,style)
 import           Paths_hindent (version)
 import           System.Directory
 import           System.Environment
