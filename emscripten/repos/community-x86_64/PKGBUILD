# Maintainer: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: carstene1ns <arch carsten-teibes de> - http://git.io/ctPKG
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Vlad Kolotvin <vlad.kolotvin@gmail.com>

pkgname=emscripten
pkgver=1.38.47
pkgrel=2
pkgdesc="LLVM-based project that compiles C and C++ into highly-optimizable JavaScript for the web"
arch=('x86_64')
url="http://emscripten.org"
license=('custom')
depends=(nodejs python binaryen)
makedepends=(cmake libxml2 git ninja)
optdepends=('java-environment: for using clojure'
            'ruby: for using websockify addon'
            'cmake: for emcc --show-ports')
install=emscripten.install
# Get commit SHAs from here:
# https://chromium.googlesource.com/emscripten-releases/+/refs/heads/master/DEPS
source=(emscripten-$pkgver.tar.gz::"https://github.com/kripken/emscripten/archive/$pkgver.tar.gz"
        git+https://github.com/llvm/llvm-project.git#commit=411f1885b655ea622fe124a87a6eadfd988d7a5e
        "emscripten.sh")
sha512sums=('3cc645f214e79f36fb25876dc98c24582ab907a410aede9c8bb2823ff58d46c11b3e05a9c522ee8c5fcaf6be5cf751d1c2d6cf9095600350b6d7693e49fa801d'
            'SKIP'
            'fbe9b95b8d18e7d0c6ec5fded6f11b72fbe4ddd0391e5704b281ba79c479f3563e82423b790ddf3f0554a23d659193ca898a81fe3db509f16c30c7188b790e4d')

prepare() {
  cd "$srcdir"/emscripten-$pkgver

  sed -i 's|EMSCRIPTEN_ROOT.*|EMSCRIPTEN_ROOT = "/usr/lib/emscripten"|g' tools/settings_template_readonly.py
  sed -i 's|LLVM_ROOT.*|LLVM_ROOT = "/usr/lib/emscripten-llvm"|g' tools/settings_template_readonly.py

  mkdir "$srcdir"/llvm-project/llvm/build
}

build() {
  cd "$srcdir"/llvm-project/llvm/build

  # Inspired from https://github.com/WebAssembly/waterfall/blob/58e343a47ea02cb6daf19eefbdf626b23c24980c/src/build.py#L790
  cmake .. \
    -GNinja \
    -DPYTHON_EXECUTABLE=/usr/bin/python \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=YES \
    -DLLVM_TARGETS_TO_BUILD="X86;WebAssembly" \
    -DLLVM_BUILD_RUNTIME=OFF \
    -DLLVM_TOOL_LTO_BUILD=ON \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=ON \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_ENABLE_PROJECTS="lld;clang" \
    -DCLANG_INCLUDE_TESTS=OFF
  ninja
}

package() {
  # Install LLVM stuff according to https://github.com/emscripten-core/emscripten/blob/incoming/docs/process.md
  install -d "$pkgdir"/usr/lib
  cp -r "$srcdir"/llvm-project/llvm/build/bin "$pkgdir"/usr/lib/emscripten-llvm

  # Install emscripten
  cd "$srcdir"/emscripten-$pkgver
  install -d "$pkgdir"/usr/lib/emscripten
  cp -rup em* cmake site src system third_party tools "$pkgdir"/usr/lib/emscripten

  # Remove clutter
  rm "$pkgdir"/usr/lib/emscripten/*.bat

  install -d "$pkgdir"/usr/share/doc
  ln -s /usr/lib/emscripten/site/source/docs "$pkgdir"/usr/share/doc/$pkgname
  install -Dm755 "$srcdir"/emscripten.sh "$pkgdir"/etc/profile.d/emscripten.sh
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}
