# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: carstene1ns <arch carsten-teibes de> - http://git.io/ctPKG
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Vlad Kolotvin <vlad.kolotvin@gmail.com>

pkgname=emscripten
pkgver=1.38.1
pkgrel=1
pkgdesc="LLVM-based project that compiles C and C++ into highly-optimizable JavaScript for the web"
arch=('x86_64')
url="http://emscripten.org"
license=('custom')
depends=('nodejs' 'python' 'python2')
makedepends=('cmake' 'libxml2')
optdepends=('java-environment: for using clojure'
            'ruby: for using websockify addon')
install=$pkgname.install
source=(emscripten-$pkgver.tar.gz::"https://github.com/kripken/emscripten/archive/$pkgver.tar.gz"
        emscripten-fastcomp-$pkgver.tar.gz::"https://github.com/kripken/emscripten-fastcomp/archive/$pkgver.tar.gz"
        emscripten-fastcomp-clang-$pkgver.tar.gz::"https://github.com/kripken/emscripten-fastcomp-clang/archive/$pkgver.tar.gz"
        "emscripten.sh"
        gcc8.patch)
sha512sums=('5f67339fd901e97c5e3250e9359af819f84ed7ee0e7edb716cbf7e3b7ee5aed641b4f07e5db8366d63e076c5b6c6e180a26f459901f12b67964c6012e01542c7'
            '06175f7fc8abfcae25c2a572ac3705ddc0cf1aba3749b12a58c556b4da1b19e61505d1780fc67c1a56441bbaf055238d0c9b9ab7b8078f3da10ad3721f2b74bf'
            'fef22d3f2151ec8baaffcde49a67aac81f60e983c894a91bb00544b4cf051cb983c0db2e7a7b04dc3f5e671ee1dc9299a8ad287027883fac7a0f520b2553f652'
            '52007717c21c22f5d9f027268de2516e969f2ffb8e37121f75ca2697b7ddcde6c0be9636d19df7b3c2e89bc769f5361750c62f9fcb84d224cde3c8626bc9c93b'
            '8a651fc545bb09c23da6f138b1cc4f0d92758e7084460a09c6306ee7f727d52b0f780b775b6ef6118db144482cbfb37ef3d3dd662e357ceec0e713b342931365')

prepare() {
  cd emscripten-fastcomp-$pkgver

  patch -Np1 -i "$srcdir"/gcc8.patch

  # reset folder for out-of-source build
  rm -rf build
  mkdir build

  # put clang source into the right place (http://git.io/i1GBkg)
  rm -rf tools/clang
  ln -s "$srcdir"/emscripten-fastcomp-clang-$pkgver tools/clang

  # python2 shebang fixes
  cd ../emscripten-$pkgver
  sed '1s|python$|python2|' -i $(find third_party tools -name \*.py) emrun

  # adapt config file template to use our custom environment variable and path
  sed -e "s|getenv('LLVM')|getenv('EMSCRIPTEN_FASTCOMP')|" \
    -e 's|{{{ LLVM_ROOT }}}|/usr/lib/emscripten-fastcomp|' \
    -i tools/settings_template_readonly.py
}

build() {
  cd emscripten-fastcomp-$pkgver/build

  cmake .. \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=YES \
    -DLLVM_TARGETS_TO_BUILD="X86;JSBackend" \
    -DLLVM_BUILD_RUNTIME=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DCLANG_INCLUDE_TESTS=OFF
  make
}

package() {
  # exported variables
  install -Dm755 "$srcdir"/emscripten.sh "$pkgdir"/etc/profile.d/emscripten.sh

  # LLVM-backend, TODO: include only needed tools
  cd "$srcdir"/emscripten-fastcomp-$pkgver
  install -Dm644 emscripten-version.txt "$pkgdir"/usr/lib/emscripten-fastcomp/emscripten-version.txt
  install -m755 build/bin/* "$pkgdir"/usr/lib/emscripten-fastcomp

  # copy structure
  cd "$srcdir"/emscripten-$pkgver
  install -d "$pkgdir"/usr/lib/emscripten
  cp -rup em* cmake site src system third_party tools "$pkgdir"/usr/lib/emscripten

  # remove clutter
  rm "$pkgdir"/usr/lib/emscripten-fastcomp/{*-test,llvm-lit}
  rm "$pkgdir"/usr/lib/emscripten/*.bat

  # docs
  install -d "$pkgdir"/usr/share/doc
  ln -s /usr/lib/emscripten/site/source/docs "$pkgdir"/usr/share/doc/$pkgname

  # license
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}
