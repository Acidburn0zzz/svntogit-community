# Maintainer: NicoHood <archlinux {cat} nicohood {dog} de>
# PGP ID: 97312D5EB9D7AE7D0BD4307351DAE9B7C1AE9161
# Contributor: Tomas Schertel <tschertel at gmail dot com>
# Contributor: Christopher Loen <christopherloen at gmail dot com>
# Contributor: Peter Reschenhofer <peter.reschenhofer@gmail.com>
# Contributor: Niels Martign√®ne <niels.martignene@gmail.com>
# Contributor: PyroPeter <googlemail.com@abi1789>
# Contributor: darkapex <me@jailuthra.in>
# Contributor: tty0 <vt.tty0[d0t]gmail.com>

pkgname=arduino
pkgver=1.8.0
pkgrel=1
epoch=1
pkgdesc="Arduino prototyping platform SDK"
arch=('i686' 'x86_64')
url="https://github.com/arduino/Arduino"
license=('GPL' 'LGPL')
depends=('gtk2' 'desktop-file-utils' 'shared-mime-info' 'java-runtime=8' 'arduino-builder' 'arduino-ctags')
makedepends=('java-environment=8' 'apache-ant' 'unzip')
optdepends=('arduino-docs: Offline documentation for arduino'
            'arduino-avr-core: AVR core with upstream avr-gcc and avrdude'
            'python2: Intel Galileo Board installation')
options=(!strip)
install="arduino.install"
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/arduino/Arduino/archive/${pkgver}.tar.gz"
        "https://github.com/arduino-libraries/WiFi101-FirmwareUpdater-Plugin/releases/download/v0.8.3/WiFi101-Updater-ArduinoIDE-Plugin-0.8.3.zip"
        "https://downloads.arduino.cc/libastylej-2.05.1-3.zip"
        "https://downloads.arduino.cc/liblistSerials/liblistSerials-1.4.0.zip"
        "arduino.sh"
        "build.patch"
        "platform.txt"
        "platform.keys.rewrite.txt")
sha512sums=('25edea8cb188155ead2e2e9364067e445cf9d160d2fb7caea3c25adeb2e5e13072de8e7b1a45dfbd40c3346356decfad9de1d2e67838c532bd5ef8550678033d'
            'fb2c5f77ea047c060e67705886d106379ac4a297f3a7d1f7d6d0b2410c4592f09cece4578aeeaed867c03a2efe5fe8d124ccc36c4189ee5c875cd16473a6faab'
            '7f82d64e34ef2d85a6b037caeecfa338b72f8edfc57a9903af3ab89b1d42cf7dfd9a6170abe8131ae3e6506850d82ed5092c3b08983a16d9c80319cd24c14555'
            'd78270ee9007fc8427b7f962aced6c14fd4772deca1bbf4ad47c3c74d9addb74e67184e80516af4613cf8d7270bc50d4019437d9ad84274d6fc26b68c4a00db1'
            'd97e73a6764232c5fbcdbd46d98f1dfde1d95d8256f578fb05480694423842ec864c49d572a325c7d00b026619d84dc114f1e3e0d2f8219b94871dce1718f05a'
            '9963e964fe2206ce11a2981d3655ff73aa79e8a9dcbc5b03ee4fa84fd036b0d4b28af6ddd6c8bd0cdf8564c42209b738838141da9b185eeb47067ddb78afd9b7'
            'a311271ee4aa86b93678875b0a0121ab075fd5b56422fc7e1b6beb6626b554482e474cd6bb16d40a44bacd6e4808de5a873892c1ab6c71ae51f70757289f7364'
            '913b183eb5828fbebe565c259cd199e7c97d56af8e13d0b516fe825716feecdba8cd298b97bd24efac2612eae8c4f30c35f9b82d7499a6ae6256e1ee48510470')

prepare()
{
    # Patch arduino build process.
    # See PR: https://github.com/arduino/Arduino/pull/5438
    cd "${srcdir}/Arduino-${pkgver}"
    patch -Np1 -i "${srcdir}/build.patch"
}

build() {
    cd "Arduino-${pkgver}/build"

    # Compile with java8
    export PATH=/usr/lib/jvm/java-8-openjdk/jre/bin/:$PATH

    # Do not include their avr-core + tools and no docs. We build them seperately
    ant clean dist -Dversion=${pkgver} build -Dlight_bundle=true \
                                             -Dno_docs=true \
                                             -Dlocal_sources=true \
                                             -Dno_arduino_builder=true
}

package() {
    cd "Arduino-${pkgver}/build/linux/work"

    # Create directories
    install -dm755 "${pkgdir}/usr/share/"{doc,icons/hicolor,applications,mime/packages}

    # Copy the whole SDK
    cp -a . "${pkgdir}/usr/share/arduino"

    # Create wrapper for java8 + buider and documentation symlink
    install -Dm755 "${srcdir}/arduino.sh" "${pkgdir}/usr/bin/arduino"

    # Link arduino-builder, ctags, libastylej, libserialport and docs
    # TODO ctags, astyle libserialport do not work yet
    # TODO remove unzip dependency once all deps are resolved
    # https://github.com/arduino/ctags/issues/12
    # https://github.com/arduino/Arduino/issues/5538
    # https://github.com/arduino/listSerialPortsC/issues/9

    # Arduino-builder + ctags
    ln -s /usr/bin/arduino-builder "${pkgdir}/usr/share/arduino/arduino-builder"
    install -Dm644 "${srcdir}/platform.txt" "${pkgdir}/usr/share/arduino/hardware/platform.txt"
    install -Dm644 "${srcdir}/platform.keys.rewrite.txt" "${pkgdir}/usr/share/arduino/hardware/platform.keys.rewrite.txt"

    #rm "${pkgdir}/usr/share/arduino/lib/libastylej.so"
    #ln -s /usr/lib/libastyle-2.05.1.so "${pkgdir}/usr/share/arduino/lib/libastylej.so"
    #rm "${pkgdir}/usr/share/arduino/lib/liblistSerialsj.so"
    #ln -s /usr/lib/libserialport.so "${pkgdir}/usr/share/arduino/lib/liblistSerialsj.so"
    rm -r "${pkgdir}/usr/share/arduino/reference"
    ln -s /usr/share/doc/arduino "${pkgdir}/usr/share/arduino/reference"

    # Install desktop icons (keep a symlink for the arduino binary)
    cp -a lib/icons/* "${pkgdir}/usr/share/icons/hicolor"
    rm -rf "${pkgdir}/usr/share/arduino/lib/icons"
    ln -s /usr/share/icons/hicolor "${pkgdir}/usr/share/arduino/lib/icons"

    # Create desktop file using existing template
    sed "s,<BINARY_LOCATION>,arduino %U,g;s,<ICON_NAME>,arduino,g" "lib/desktop.template" \
    > "${pkgdir}/usr/share/applications/arduino.desktop"

    # Install Arduino mime type
    ln -s /usr/share/arduino/lib/arduino-arduinoide.xml "${pkgdir}/usr/share/mime/packages/arduino.xml"
}
