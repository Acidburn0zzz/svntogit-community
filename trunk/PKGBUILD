# $Id$
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Arch Haskell Team <arch-haskell@haskell.org>

pkgname=stack
pkgver=1.5.0
pkgrel=22
pkgdesc="The Haskell Tool Stack"
url="https://github.com/commercialhaskell/stack"
license=("custom:BSD3")
arch=('i686' 'x86_64')
depends=('ghc' "haskell-aeson" "haskell-annotated-wl-pprint" "haskell-ansi-terminal"
         "haskell-async" "haskell-attoparsec" "haskell-base-compat" "haskell-base64-bytestring"
         "haskell-binary-tagged" "haskell-blaze-builder" "haskell-clock" "haskell-conduit"
         "haskell-conduit-extra" "haskell-cryptonite" "haskell-cryptonite-conduit" "haskell-echo"
         "haskell-either" "haskell-errors" "haskell-exceptions" "haskell-extra"
         "haskell-fast-logger" "haskell-file-embed" "haskell-filelock" "haskell-fsnotify"
         "haskell-generic-deriving" "haskell-gitrev" "haskell-hackage-security" "haskell-hashable"
         "haskell-hastache" "haskell-http-client" "haskell-http-client-tls" "haskell-http-conduit"
         "haskell-http-types" "haskell-hpack" "haskell-lifted-async" "haskell-lifted-base"
         "haskell-memory" "haskell-microlens" "haskell-microlens-mtl" "haskell-mintty"
         "haskell-monad-control" "haskell-monad-logger" "haskell-monad-unlift" "haskell-mtl"
         "haskell-network-uri" "haskell-open-browser" "haskell-optparse-applicative"
         "haskell-optparse-simple" "haskell-path" "haskell-path-io" "haskell-persistent"
         "haskell-persistent-sqlite" "haskell-persistent-template" "haskell-pid1"
         "haskell-project-template" "haskell-regex-applicative-text" "haskell-resourcet"
         "haskell-retry" "haskell-safe" "haskell-safe-exceptions" "haskell-semigroups"
         "haskell-split" "haskell-stm" "haskell-store" "haskell-store-core"
         "haskell-streaming-commons" "haskell-tar" "haskell-temporary" "haskell-text"
         "haskell-text-binary" "haskell-text-metrics" "haskell-tls" "haskell-transformers-base"
         "haskell-unicode-transforms" "haskell-unix-compat" "haskell-unordered-containers"
         "haskell-vector" "haskell-vector-binary-instances" "haskell-yaml" "haskell-zip-archive"
         "haskell-zlib")
conflicts=('haskell-stack')
replaces=('haskell-stack')
install="stack.install"
source=("$pkgname-$pkgver.tar.gz::https://github.com/commercialhaskell/stack/archive/v$pkgver.tar.gz"
        path-0.6.1.patch)
sha256sums=('2ffead80e9cc3b72480e9130bb639aaa8a6a684d8f6098a3843fe88803c8e478'
            '2013b76677e62851248f26f8b77d0f37a52496b3380bf3107519d5a84e09808f')

prepare() {
    cd "${srcdir}/${pkgname}-${pkgver}"
    patch -p1 -i ../path-0.6.1.patch

    sed -e 's/cryptonite >= 0.19 && < 0.24/cryptonite >= 0.19 \&\& < 0.25/' \
        -e 's/, path >= 0.5.8 && < 0.6/, path >= 0.5.8 \&\& < 0.7/' \
        -i stack.cabal
}

build() {
    cd "${srcdir}/${pkgname}-${pkgver}"

    runhaskell Setup configure -O --enable-shared --enable-executable-dynamic \
        --prefix=/usr --docdir="/usr/share/doc/${pkgname}" \
        --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
            -f-disable-git-info -f-integration-tests -f-static -f-hide-dependency-versions
    runhaskell Setup build
    runhaskell Setup haddock --hoogle --html
    runhaskell Setup register --gen-script
    runhaskell Setup unregister --gen-script
    sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
    sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

package() {
    cd "${srcdir}/${pkgname}-${pkgver}"

    install -D -m744 register.sh   "${pkgdir}/usr/share/haskell/register/${pkgname}.sh"
    install -D -m744 unregister.sh "${pkgdir}/usr/share/haskell/unregister/${pkgname}.sh"
    install -d -m755 "${pkgdir}/usr/share/doc/ghc/html/libraries"
    ln -s "/usr/share/doc/${pkgname}/html" "${pkgdir}/usr/share/doc/ghc/html/libraries/${pkgname}"
    runhaskell Setup copy --destdir="${pkgdir}"
    install -D -m644 "LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
    rm -f "${pkgdir}/usr/share/doc/${pkgname}/LICENSE"
    
    LD_PRELOAD=$(ls "$pkgdir"/usr/lib/libHSstack-*-ghc*.so) "${pkgdir}"/usr/bin/stack --bash-completion-script /usr/bin/stack > stack_completion_script
    install -Dm644 stack_completion_script "${pkgdir}/usr/share/bash-completion/completions/stack"

    # Remove static libs
    find "$pkgdir"/usr/lib -name "*.a" -delete
}
