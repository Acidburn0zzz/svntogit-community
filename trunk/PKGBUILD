# $Id$
# Maintainer: Laurent Carlier <lordheavym@gmail.com>
# Contributor : sebikul <sebikul@gmail.com>

pkgbase=gambas3
pkgname=('gambas3-runtime' 'gambas3-devel' 'gambas3-ide' 'gambas3-script' 'gambas3-examples' 'gambas3-gb-args' 'gambas3-gb-cairo' 'gambas3-gb-chart'
         'gambas3-gb-dbus' 'gambas3-gb-complex' 'gambas3-gb-compress' 'gambas3-gb-crypt' 'gambas3-gb-data' 'gambas3-gb-db' 'gambas3-gb-db-form'
         'gambas3-gb-db-mysql' 'gambas3-gb-db-odbc' 'gambas3-gb-db-postgresql' 'gambas3-gb-db-sqlite2' 'gambas3-gb-db-sqlite3'
         'gambas3-gb-desktop' 'gambas3-gb-desktop-gnome' 'gambas3-gb-eval-highlight' 'gambas3-gb-form' 'gambas3-gb-form-dialog'
         'gambas3-gb-form-mdi' 'gambas3-gb-form-stock' 'gambas3-gb-gsl' 'gambas3-gb-gtk' 'gambas3-gb-gtk-opengl' 'gambas3-gb-image'
         'gambas3-gb-image-effect' 'gambas3-gb-image-imlib' 'gambas3-gb-image-io' 'gambas3-gb-jit' 'gambas3-gb-libxml' 'gambas3-gb-map'
         'gambas3-gb-media' 'gambas3-gb-memcached' 'gambas3-gb-mime' 'gambas3-gb-ncurses' 'gambas3-gb-net' 'gambas3-gb-net-curl'
         'gambas3-gb-net-pop3' 'gambas3-gb-net-smtp' 'gambas3-gb-opengl' 'gambas3-gb-opengl-glu' 'gambas3-gb-opengl-glsl' 'gambas3-gb-option'
         'gambas3-gb-pcre' 'gambas3-gb-pdf' 'gambas3-gb-qt4' 'gambas3-gb-qt4-ext' 'gambas3-gb-qt4-opengl' 'gambas3-gb-qt4-webkit'
         'gambas3-gb-report' 'gambas3-gb-sdl' 'gambas3-gb-sdl-sound' 'gambas3-gb-settings' 'gambas3-gb-signal' 'gambas3-gb-v4l' 'gambas3-gb-vb'
         'gambas3-gb-xml' 'gambas3-gb-xml-html' 'gambas3-gb-xml-rpc' 'gambas3-gb-xml-xslt' 'gambas3-gb-web') 
pkgver=3.4.0
pkgrel=3
pkgdesc="A free development environment based on a Basic interpreter."
arch=('i686' 'x86_64')
url="http://gambas.sourceforge.net/"
license=('GPL2')
groups=('gambas3')
makedepends=('intltool' 'mysql' 'postgresql' 'libffi' 'bzip2' 'glib2' 'v4l-utils'
         'zlib' 'mesa' 'libgl' 'glew' 'xdg-utils' 'gtk2' 'imlib2' 'gdk-pixbuf2'
         'postgresql-libs' 'libmysqlclient' 'unixodbc' 'sqlite2' 'sqlite' 'librsvg'
         'curl' 'poppler-glib' 'sdl_mixer' 'sdl_ttf' 'libxtst' 'pcre' 'qtwebkit'
         'libxcursor' 'libsm' 'dbus-core' 'libxml2' 'libxslt' 'libgnome-keyring'
	 'gsl' 'gstreamer0.10' 'gstreamer0.10-base' 'gtkglext' 'ncurses' 'llvm'
	 'gmime' 'glu')
options=('!emptydirs')
source=("http://downloads.sourceforge.net/gambas/${pkgbase}-${pkgver}.tar.bz2"
        fix-xfce4-terminal.patch
        uninstall-with-XDG_UTILS.patch)
md5sums=('e9d63bfaf351fc7e1705d1b80785b6af'
         '543ffb3402485e0bcfc67ecf15b7b682'
         'abf7d298d301aef65ecc4d9a775ebd00')

build() {
  cd ${srcdir}/${pkgbase}-${pkgver}

  # merged upstream
  patch -Np1 -i ../uninstall-with-XDG_UTILS.patch
  patch -Np0 -i ../fix-xfce4-terminal.patch

  ./reconf-all
  ./configure --prefix=/usr -C

  make bindir=${pkgdir}/usr/bin
}

package_gambas3-runtime() {
  depends=('libffi' 'xdg-utils')
  pkgdesc="Runtime environment"
  conflicts=('gambas3-gb-gui')
  replaces=('gambas3-gb-gui')
  provides=("gambas3-gb-gui=${pkgver}")
  install=gambas3-runtime.install

  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbc
  make -j1 DESTDIR="${pkgdir}" install

  cd ../gbx
  make -j1 DESTDIR="${pkgdir}" install
  cd ../lib/debug
  make -j1 DESTDIR="${pkgdir}" install
  cd ../eval
  make -j1 DESTDIR="${pkgdir}" install
  cd ../draw
  make -j1 DESTDIR="${pkgdir}" install
  install -D -m644 ../gb.component \
    ${pkgdir}/usr/lib/gambas3

  cd ${srcdir}/${pkgbase}-${pkgver}/main
  ln -s gbx3 ${pkgdir}/usr/bin/gbr3
  gbc/gbi3 -r ${pkgdir}/usr gb
  rm -f ${pkgdir}/usr/lib/gambas3/gb.{so*,la}

  ## needed for postinst with xdg-utils
  install -d -m755 ${pkgdir}/usr/share/gambas3/mime
  install -D -m644 mime/* \
    ${pkgdir}/usr/share/gambas3/mime/
  install -d -m755 ${pkgdir}/usr/share/gambas3/icons
  install -D -m644 mime/application-x-gambas3.png \
    ${pkgdir}/usr/share/gambas3/icons/application-x-gambas3.png

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/gui.opengl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/image
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main/lib/image
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbc
  make DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{a*,chart.*,eval.highlight.*,form.*,[s-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{a*,chart.*,eval.highlight.*,form.*,[s-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/control
  ##  
}

package_gambas3-devel() {
  depends=('gambas3-runtime')
  pkgdesc="Development environment"

  cd ${srcdir}/${pkgbase}-${pkgver}/main/gbc
  make -j1 DESTDIR="${pkgdir}" install
}

package_gambas3-ide() {
  depends=('gambas3-devel' 'gambas3-gb-db-form' 'gambas3-gb-desktop' 'gambas3-gb-eval-highlight'
           'gambas3-gb-form-dialog' 'gambas3-gb-settings' 'gambas3-gb-form-mdi' 'gambas3-gb-image-effect'
           'gambas3-gb-qt4-ext' 'gambas3-gb-qt4-webkit')
  pkgdesc="Integrated Development Environment"

  cd ${srcdir}/${pkgbase}-${pkgver}
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  #!! with the ide !!
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/app/desktop/gambas3.desktop \
    ${pkgdir}/usr/share/applications/gambas3.desktop
  install -D -m644 ${srcdir}/${pkgbase}-${pkgver}/app/desktop/gambas3.png \
    ${pkgdir}/usr/share/pixmaps/gambas3.png

  rm -r ${pkgdir}/usr/bin/gb*
  rm -r ${pkgdir}/usr/lib
  rm -r ${pkgdir}/usr/share/gambas3
}

package_gambas3-script() {
  depends=('gambas3-devel')
  pkgdesc="Scripter and server programs support"
  install=gambas3-script.install

  cd ${srcdir}/${pkgbase}-${pkgver}
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## needed for postinst with xdg-utils
  cd ${srcdir}/${pkgbase}-${pkgver}/app/mime
  install -d -m755 ${pkgdir}/usr/share/gambas3/mime
  install -D -m644 *.xml ${pkgdir}/usr/share/gambas3/mime/
  install -D -m644 *.png ${pkgdir}/usr/share/gambas3/mime/
  ##

  rm -r ${pkgdir}/usr/bin/{gambas*,gb{[a-r]*,x*}}
  rm -r ${pkgdir}/usr/lib
  rm -r ${pkgdir}/usr/share/gambas3/[c-i]*
}

package_gambas3-examples() {
  depends=('gambas3-gb-args' 'gambas3-gb-cairo' 'gambas3-gb-chart' 'gambas3-gb-dbus' 'gambas3-gb-complex' 'gambas3-gb-compress'
           'gambas3-gb-crypt' 'gambas3-gb-data' 'gambas3-gb-db' 'gambas3-gb-db-form' 'gambas3-gb-db-mysql' 'gambas3-gb-db-odbc' 
           'gambas3-gb-db-postgresql' 'gambas3-gb-db-sqlite2' 'gambas3-gb-db-sqlite3' 'gambas3-gb-desktop' 'gambas3-gb-eval-highlight' 'gambas3-gb-form' 
           'gambas3-gb-form-dialog' 'gambas3-gb-form-mdi' 'gambas3-gb-gtk' 'gambas3-gb-image' 'gambas3-gb-image-effect' 'gambas3-gb-image-imlib'
           'gambas3-gb-image-io' 'gambas3-gb-map' 'gambas3-gb-media' 'gambas3-gb-memcached' 'gambas3-gb-mime' 'gambas3-gb-ncurses' 'gambas3-gb-net' 
           'gambas3-gb-net-smtp' 'gambas3-gb-opengl' 'gambas3-gb-opengl-glsl' 'gambas3-gb-option' 'gambas3-gb-pcre' 'gambas3-gb-pdf'
           'gambas3-gb-net-curl' 'gambas3-gb-net-pop3' 'gambas3-gb-qt4' 'gambas3-gb-qt4-ext' 'gambas3-gb-qt4-opengl' 'gambas3-gb-qt4-webkit' 
           'gambas3-gb-sdl-sound' 'gambas3-gb-settings' 'gambas3-gb-signal' 'gambas3-gb-v4l' 'gambas3-gb-vb' 'gambas3-gb-xml'
           'gambas3-gb-report' 'gambas3-gb-sdl' 'gambas3-gb-xml-rpc' 'gambas3-gb-xml-xslt' 'gambas3-gb-web')
  pkgdesc="Applications examples"

  cd ${srcdir}/${pkgbase}-${pkgver}
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  rm -r ${pkgdir}/usr/{bin,lib}
  rm -r ${pkgdir}/usr/share/gambas3/{info,control,gb.sdl}
}

package_gambas3-gb-args() {
  depends=('gambas3-runtime')
  pkgdesc="Command-line options analyzer component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.[f-w]*
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.[f-w]*
  ##
}

package_gambas3-gb-cairo() {
  depends=('gambas3-runtime' 'cairo')
  pkgdesc="Cairo component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.cairo
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-chart() {
  depends=('gambas3-gb-form')
  pkgdesc="Chart component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control
  rm -r ${pkgdir}/usr/lib/gambas3/gb.[a*,d-w]*
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.[a*,d-w]*
  ##
}

package_gambas3-gb-complex() {
  depends=('gambas3-runtime')
  pkgdesc="Complex numbers component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## Workaround for splitting
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{comp{r,o}*,[d-v]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{compr*,[d-v]*}
  ##
}

package_gambas3-gb-compress() {
  depends=('gambas3-runtime' 'bzip2' 'zlib')
  pkgdesc="Compression support component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.compress.bzlib2
  make -j1 DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.compress.zlib
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.comp{o,l}*,gb.[d-v]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{compl*,[d-v]*}
  ##
}

package_gambas3-gb-crypt() {
  depends=('gambas3-runtime')
  pkgdesc="MD5/DES crypting component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.crypt
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-data() {
  depends=('gambas3-runtime')
  pkgdesc="Data containers component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## Workaround for splitting
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{c*,d{b,e,r}*,[e-v]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{c*,d{b,e}*,[e-v]*}
  ##
}

package_gambas3-gb-db() {
  depends=('gambas3-runtime')
  pkgdesc="Database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## Workaround for splitting
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[a-c]*,gb.d{a,e,r}*,gb.[e-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[a-c]*,gb.d{a,e}*,gb.[e-z]*}
  ##
}

package_gambas3-gb-db-form() {
  depends=('gambas3-gb-db' 'gambas3-gb-form')
  pkgdesc="Database form component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-c]*,[e-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-c]*,[e-z]*}
  ##
}

package_gambas3-gb-db-mysql() {
  depends=('gambas3-gb-db' 'libmysqlclient')
  pkgdesc="MySQL database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.mysql
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-db-odbc() {
  depends=('gambas3-gb-db' 'unixodbc')
  pkgdesc="ODBC database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.odbc
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-db-postgresql() {
  depends=('gambas3-gb-db' 'postgresql-libs')
  pkgdesc="PostgreSQL database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.postgresql
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-db-sqlite2() {
  depends=('gambas3-gb-db' 'sqlite2' 'gcc-libs')
  pkgdesc="Sqlite2 database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.sqlite2
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-db-sqlite3() {
  depends=('gambas3-gb-db' 'sqlite' 'gcc-libs')
  pkgdesc="Sqlite3 database access component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.db.sqlite3
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-dbus() {
  depends=('gambas3-runtime' 'dbus-core')
  pkgdesc="DBUS component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.dbus
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-desktop() {
  depends=('gambas3-gb-image' 'libsm' 'libxtst')
  pkgdesc="Desktop component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.desktop
  make -j1 DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.desktop/src/gnome
  make DESTDIR="${pkgdir}" uninstall

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-desktop-gnome() {
  depends=('gambas3-gb-desktop' 'libgnome-keyring')
  pkgdesc="Desktop component for Gnome"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.desktop/src/gnome
  make -j1 DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-eval-highlight() {
  depends=('gambas3-runtime')
  pkgdesc="Expression evaluator highlight component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-d]*,[f-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-d]*,[f-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/control
  ##
}

package_gambas3-gb-form() {
  depends=('gambas3-runtime')
  pkgdesc="Form component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control/{gb.db*,gb.form.*,gb.report}
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-e]*,[g-w]*,form.{d*,m*,s*}}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-e]*,[g-w]*,form.{d*,m*,s*}}
  ##
}

package_gambas3-gb-form-dialog() {
  depends=('gambas3-gb-form')
  pkgdesc="Form dialog component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-e]*,[g-w]*,form.{c*,g*,m*,s*}}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-e]*,[g-w]*,form.{i*,l*,m*,s*}}
  ##
}

package_gambas3-gb-form-mdi() {
  depends=('gambas3-gb-form')
  pkgdesc="Form MDI component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control/{gb.db*,gb.form,gb.report}
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-e]*,[g-w]*,form.{c*,d*,g*,s*}}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-e]*,[g-w]*,form.{i*,l*,d*,s*}}
  ##
}

package_gambas3-gb-form-stock() {
  depends=('gambas3-runtime')
  pkgdesc="Default stock icons component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{a*,[m-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{a*,[m-w]*}
  ##
}

package_gambas3-gb-gsl() {
  depends=('gambas3-runtime' 'gsl')
  pkgdesc="The GNU Scientific Library component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gsl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-gtk() {
  depends=('gambas3-gb-image' 'gtk2' 'librsvg')
  pkgdesc="GTK+ toolkit component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk/src/opengl
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-gtk-opengl() {
  depends=('gambas3-gb-gtk' 'gambas3-gb-opengl' 'gtkglext' 'glu')
  pkgdesc="GTK+ toolkit OpenGL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk/src/opengl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-image() {
  depends=('gambas3-runtime')
  pkgdesc="Image component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[c-g]*,gb.image.e*,gb.[j-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[c-g]*,gb.info,gb.image.e*,gb.[j-z]*}
  ##
}

package_gambas3-gb-image-effect() {
  depends=('gambas3-gb-image' 'gcc-libs')
  pkgdesc="Image effect component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[c-g]*,gb.image.{c*,l*,s*},gb.[j-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[c-g]*,gb.info,gb.image.{i*,l*},gb.[j-z]*}
  ##
}

package_gambas3-gb-image-imlib() {
  depends=('gambas3-gb-image' 'imlib2')
  pkgdesc="Imlib component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.image.imlib
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-image-io() {
  depends=('gambas3-gb-image' 'gdk-pixbuf2')
  pkgdesc="Input/Output image component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.image.io
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-jit() {
  depends=('gambas3-runtime' 'llvm')
  pkgdesc="Just-in-time compiler component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.jit
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-libxml() {
  depends=('gambas3-runtime' 'libxml2')
  pkgdesc="libxml2 component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.libxml
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-map() {
  depends=('gambas3-gb-image-io' 'gambas3-gb-form')
  pkgdesc="Display maps component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[a-g]*,gb.mysql.*,gb.memcached.*,gb.[r-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/control/gb.{[d-f]*,[q-r]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[a-g]*,gb.mysql.*,gb.memcached.*,gb.[r-w]*}
  ##
}

package_gambas3-gb-media() {
  depends=('gambas3-runtime' 'gstreamer0.10' 'gstreamer0.10-base')
  pkgdesc="Simplified interface to the GStreamer library component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.media
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-memcached() {
  depends=('gambas3-gb-net')
  pkgdesc="Memcached client component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.gtk
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[a-g]*,gb.mysql.*,gb.[r-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/control
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[a-g]*,gb.mysql.*,gb.[r-w]*}
  ##
}

package_gambas3-gb-mime() {
  depends=('gambas3-runtime' 'gmime')
  pkgdesc="MIME message component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.mime
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-ncurses() {
  depends=('gambas3-runtime' 'ncurses')
  pkgdesc="Ncurses component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.ncurses
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-net() {
  depends=('gambas3-runtime')
  pkgdesc="Network component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-net-curl() {
  depends=('gambas3-gb-net' 'curl')
  pkgdesc="Curl component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-net-pop3() {
  depends=('gambas3-gb-net' 'gambas3-gb-mime')
  pkgdesc="POP3 component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.mime
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.mime
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-m]*,[s-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-m]*,[s-w]*}
  ##
}

package_gambas3-gb-net-smtp() {
  depends=('gambas3-runtime' 'glib2')
  pkgdesc="SMTP component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.smtp
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-opengl() {
  depends=('gambas3-runtime' 'glew')
  pkgdesc="OpenGL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl/src/glsl
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl/src/glu
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-opengl-glu() {
  depends=('gambas3-gb-opengl')
  pkgdesc="GL Utility component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl/src/glu
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-opengl-glsl() {
  depends=('gambas3-gb-opengl')
  pkgdesc="GLSL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.opengl/src/glsl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-option() {
  depends=('gambas3-runtime')
  pkgdesc="Getopt component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[a-n]*,gb.[p-z]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[a-n]*,gb.[p-z]*}
  ##
}

package_gambas3-gb-pcre() {
  depends=('gambas3-runtime' 'pcre')
  pkgdesc="PCRE component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.pcre
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-pdf() {
  depends=('gambas3-runtime' 'poppler')
  pkgdesc="PDF component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.pdf
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-qt4() {
  depends=('gambas3-gb-image' 'qt4')
  pkgdesc="Qt4 toolkit component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/ext
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/opengl
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/webkit
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-qt4-ext() {
  depends=('gambas3-gb-qt4')
  pkgdesc="Qt4 toolkit extended component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/ext
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-qt4-opengl() {
  depends=('gambas3-gb-qt4' 'gambas3-gb-opengl')
  pkgdesc="Qt4 toolkit OpenGL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/opengl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-qt4-webkit() {
  depends=('gambas3-gb-qt4' 'qtwebkit')
  pkgdesc="Qt4 toolkit webkit component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4/src/webkit
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-report() {
  depends=('gambas3-gb-form' 'gambas3-gb-image-io')
  pkgdesc="Report component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.qt4
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/share/gambas3/control/gb.[d-f]*
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-m]*,[s-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-m]*,[s-w]*}
  ##
}

package_gambas3-gb-sdl() {
  depends=('gambas3-gb-image-io' 'sdl_ttf' 'libxcursor' 'glew')
  pkgdesc="SDL component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.sdl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-sdl-sound() {
  depends=('gambas3-runtime' 'sdl_mixer')
  pkgdesc="SDL sound component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.sdl.sound
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-settings() {
  depends=('gambas3-runtime')
  pkgdesc="Setting component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.{[a-r]*,[t-w]*}
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.{[a-r]*,[t-w]*}
  ##
}

package_gambas3-gb-signal() {
  depends=('gambas3-runtime')
  pkgdesc="POSIX Signals component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## cleanup the workaround
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/{gb.[c-r]*,gb.[t-z]*,gb.so*}
  rm -r ${pkgdir}/usr/share/gambas3/info/{gb.[c-r]*,gb.[t-z]*}
  ##
}

package_gambas3-gb-v4l() {
  depends=('gambas3-runtime' 'v4l-utils' 'libjpeg' 'libpng')
  pkgdesc="Video4linux component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.v4l
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-vb() {
  depends=('gambas3-runtime')
  pkgdesc="Visual Basic transitional component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  ## Workaround for splitting
  rm -r ${pkgdir}/usr/bin
  rm -r ${pkgdir}/usr/lib/gambas3/gb.[a-u]*
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.[a-u]*
  ##
}

package_gambas3-gb-web() {
  depends=('gambas3-runtime')
  pkgdesc="CGI component"

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/comp
  make -j1 DESTDIR="${pkgdir}" install

  ## Workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm -r ${pkgdir}/usr/lib/gambas3/gb.[a-v]*
  rm -r ${pkgdir}/usr/share/gambas3/info/gb.[a-v]*
  ##
}

package_gambas3-gb-xml() {
  depends=('gambas3-runtime' 'gcc-libs')
  pkgdesc="XML component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/html
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/xslt
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/rpc
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-xml-html() {
  depends=('gambas3-gb-xml')
  pkgdesc="HTML generator component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/html
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

package_gambas3-gb-xml-rpc() {
  depends=('gambas3-gb-xml' 'gambas3-gb-net-curl')
  pkgdesc="XML-RPC component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/gb.net.curl
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  rm ${pkgdir}/usr/lib/gambas3/gb.xml.[c-l]*
  rm ${pkgdir}/usr/lib/gambas3/gb.xml.[s-x]*
  rm ${pkgdir}/usr/share/gambas3/info/gb.xml.[h-l]*
  rm ${pkgdir}/usr/share/gambas3/info/gb.xml.xslt.*
  ##
}

package_gambas3-gb-xml-xslt() {
  depends=('gambas3-gb-xml' 'libxslt')
  pkgdesc="XML-XSLT component"

  ## workaround for splitting
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install
  ##

  cd ${srcdir}/${pkgbase}-${pkgver}/gb.xml/src/xslt
  make -j1 XDG_UTILS='' DESTDIR="${pkgdir}" install

  ## cleanup the workaround
  cd ${srcdir}/${pkgbase}-${pkgver}/main
  make XDG_UTILS='' DESTDIR="${pkgdir}" uninstall
  ##
}

