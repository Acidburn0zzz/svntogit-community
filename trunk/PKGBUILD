# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Bruno Pagani <archange@archlinux.org>

pkgname=matrix-appservice-irc
pkgver=0.17.0
pkgrel=1
pkgdesc="Node.js IRC bridge for Matrix"
arch=('x86_64')
url="https://github.com/matrix-org/matrix-appservice-irc"
license=('Apache')
depends=('nodejs')
makedepends=('git' 'npm' 'python')
optdepends=('python-urllib3: for grant-ops-in-room.py, migrate-users.py, remove-idle-users.py and remove-user.py'
            'python-requests: for grant-ops-in-room.py, migrate-users.py, remove-idle-users.py and remove-user.py'
            'python-yaml: for grant-ops-in-room.py, migrate-users.py and remove-user.py')
backup=("etc/${pkgname}/config.yaml"
        "etc/${pkgname}/provisioning.rules.yaml"
        "etc/${pkgname}/registration.yaml")
source=("https://github.com/matrix-org/matrix-appservice-irc/archive/${pkgver}/${pkgname}-${pkgver}.tar.gz"
        "${pkgname}.service"
        "${pkgname}.sysusers"
        "${pkgname}.tmpfiles")
sha512sums=('36c03e7f4ea5ee2982c4a7def6793ee0a42f2ab637d17af521e1ef03ac5f4cb8693f29a3061c8a7e92d4ee8c8d6ec9fc6e120080d43cc68f5711392d059e370d'
            'f1d1351a554f68537c7fc5771dddc0267a1f19d214bef935faca7b161d611145e3c127c77ae4eefc10c002a2f2f7a8d90e353b0e526ab83a9666d7d457fc449c'
            'f615e5da11be8d834d6f48f064a65a9b7aa129d255be7865a171522d5aed921eb549a33661ab2c4fff4625d2ca5a7f9c43be95c188e7a77bdde4062aa3983edd'
            '60b7afdd68aaf2c8e47caf10efefb6c4dc54f40d187ad495a604786b30c00dac7e5c77a7b596d86c2a62a7cdbe3727e11f75494f86d26c9fc51ea7a1bf6ab7f0')

prepare() {
  cd "${pkgname}-${pkgver}"
  sed -e "s|./provisioning.rules.yaml|/etc/${pkgname}/provisioning.rules.yaml|" \
      -i config.sample.yaml
  touch registration.yaml
}

build() {
  cd "${pkgname}-${pkgver}"
  npm install --cache "${srcdir}"/npm-cache
}

check() {
  cd "${pkgname}-${pkgver}"
  npm audit || echo "npm audit output might return non-zero"
  npm test
}

package() {
  cd "${pkgname}-${pkgver}"
  # removing unneeded files and directories
  find node_modules -type f \
          \( \
         -iname '*Makefile*' -o \
         -iname '*appveyor.yml' -o \
         -iname '*.babelrc' -o \
         -iname '*.bak' -o \
         -iname '*bower.json' -o \
         -iname '*.c' -o \
         -iname '*.cc' -o \
         -iname '*.cpp' -o \
         -iname '*.md' -o \
         -iname '*.markdown' -o \
         -iname '*.rst' -o \
         -iname '*.nycrc' -o \
         -iname '*.npmignore' -o \
         -iname '*.editorconfig' -o \
         -iname '*.el' -o \
         -iname '*.eslintignore' -o \
         -iname '*.eslintrc*' -o \
         -iname '*.fimbullinter.yaml' -o \
         -iname '*.gitattributes' -o \
         -iname '*.gitmodules' -o \
         -iname '*.h' -o \
         -iname '*.html' -o \
         -iname '*.jshintrc' -o \
         -iname '*.jscs.json' -o \
         -iname '*.log' -o \
         -iname '*logo.svg' -o \
         -iname '*.nvmrc' -o \
         -iname '*.o' -o \
         -iname '*package-lock.json' -o \
         -iname '*.travis.yml' -o \
         -iname '*.prettierrc' -o \
         -iname '*.sh' -o \
         -iname '*.tags*' -o \
         -iname '*.tm_properties' -o \
         -iname '*.wotanrc.yaml' -o \
         -iname '*tsconfig.json' -o \
         -iname '*yarn.lock' \
         \) \
         -delete
  find node_modules -type d \
          \( \
         -iwholename '*.github' -o \
         -iwholename '*.tscache' -o \
         -iwholename '*/man' -o \
         -iwholename '*/test' -o \
         -iwholename '*/scripts' -o \
         -iwholename '*/git-hooks' \
         \) \
         -exec rm -rvf {} +
  find node_modules -empty -type d -delete
  install -vdm 755 "${pkgdir}/usr/lib/node_modules/${pkgname}/"
  # copy vendored modules, lib and entry point
  cp -av {lib,node_modules,app.js,config.schema.yml} "${pkgdir}/usr/lib/node_modules/${pkgname}/"
  # configuration
  install -vDm 640 config.sample.yaml "${pkgdir}/etc/${pkgname}/config.yaml"
  install -vDm 640 provisioning.rules.sample.yaml \
    "${pkgdir}/etc/${pkgname}/provisioning.rules.yaml"
  install -vDm 640 registration.yaml \
    -t "${pkgdir}/etc/${pkgname}/"
  # service
  install -vDm 644 "../${pkgname}.service" -t "${pkgdir}/usr/lib/systemd/system"
  # tmpfiles.d and sysusers.d
  install -vDm 644 "../${pkgname}.sysusers" \
    "${pkgdir}/usr/lib/sysusers.d/${pkgname}.conf"
  install -vDm 644 "../${pkgname}.tmpfiles" \
    "${pkgdir}/usr/lib/tmpfiles.d/${pkgname}.conf"
  # python scripts
  install -vDm 755 scripts/{grant-ops-in-room,migrate-users,remove-idle-users,remove-user}.py \
    -t "${pkgdir}/usr/bin"
  # add nodejs based scripts (which are location dependent)
  install -vDm 755 scripts/{migrate-db-to-pgres.sh,unbridge.js} \
    -t "${pkgdir}/usr/lib/node_modules/${pkgname}/scripts"
  # docs
  install -vDm 644 {CHANGELOG,CONTRIBUTING,HOWTO,README}.md \
    -t "${pkgdir}/usr/share/doc/${pkgname}"
}
