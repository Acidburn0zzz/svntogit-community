# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Arch Haskell Team <arch-haskell@haskell.org>

_hkgname=hslua
pkgname=haskell-hslua
pkgver=1.0.0
pkgrel=1
pkgdesc="A Lua language interpreter embedding in Haskell"
url="https://hackage.haskell.org/package/${_hkgname}"
license=("MIT")
arch=('x86_64')
depends=('ghc-libs' 'lua' 'haskell-exceptions')
makedepends=('ghc' 'haskell-quickcheck' 'haskell-quickcheck-instances' 'haskell-tasty'
             'haskell-tasty-expected-failure' 'haskell-tasty-hunit' 'haskell-tasty-quickcheck')
source=("https://hackage.haskell.org/packages/archive/${_hkgname}/${pkgver}/${_hkgname}-${pkgver}.tar.gz")
sha512sums=('9c2e5626b303fb0b6faa0301473d3afb538d2e43a81a89e90a951953e1d0380ca8e6becccf451915f20a1d669126b3edb9cb6d22be6d81e75446f9125bb47dbe')

prepare() {
    sed -e '/, fail/d' \
        -e 's/pkgconfig-depends: lua5.3/pkgconfig-depends: lua53/' \
        -i $_hkgname-$pkgver/$_hkgname.cabal
}

build() {
    cd "${srcdir}/${_hkgname}-${pkgver}"

    runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
        --prefix=/usr --docdir="/usr/share/doc/${pkgname}" --enable-tests \
        --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
            -fsystem-lua -fpkg-config
    runhaskell Setup build
    runhaskell Setup register --gen-script
    runhaskell Setup unregister --gen-script
    sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
    sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
    cd "${srcdir}/${_hkgname}-${pkgver}"
    runhaskell Setup test
}

package() {
    cd "${srcdir}/${_hkgname}-${pkgver}"

    install -D -m744 register.sh   "${pkgdir}/usr/share/haskell/register/${pkgname}.sh"
    install -D -m744 unregister.sh "${pkgdir}/usr/share/haskell/unregister/${pkgname}.sh"
    runhaskell Setup copy --destdir="${pkgdir}"
    install -D -m644 "LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
    rm -f "${pkgdir}/usr/share/doc/${pkgname}/LICENSE"
}
