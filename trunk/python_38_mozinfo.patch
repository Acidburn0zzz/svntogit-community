diff -r 05375fb5dd89 testing/mozbase/mozinfo/mozinfo/mozinfo.py
--- a/testing/mozbase/mozinfo/mozinfo/mozinfo.py	Fri Nov 15 16:21:54 2019 +0000
+++ b/testing/mozbase/mozinfo/mozinfo/mozinfo.py	Fri Nov 15 13:32:36 2019 -0500
@@ -14,6 +14,7 @@
 import platform
 import re
 import sys
+
 from .string_version import StringVersion
 from ctypes.util import find_library
 
@@ -98,25 +99,34 @@
     info['os'] = 'win'
     os_version = version = unknown
 elif system == "Linux":
-    if hasattr(platform, "linux_distribution"):
-        (distro, os_version, codename) = platform.linux_distribution()
-    else:
-        (distro, os_version, codename) = platform.dist()
+    # Attempt to use distro package to determine Linux distribution first.
+    # Failing that, fall back to use the platform method.
+    # Note that platform.linux_distribution() will be deprecated as of 3.8
+    # and this block will be removed once support for 2.7/3.5 is dropped.
+    try:
+        from distro import linux_distribution
+    except ImportError:
+        from platform import linux_distribution
+
+    output = linux_distribution()
+    (distribution, os_version, codename) = tuple(
+        str(item.title()) for item in output)
+
     if not processor:
         processor = machine
-    version = "%s %s" % (distro, os_version)
+    version = "%s %s" % (distribution, os_version)
 
     # Bug in Python 2's `platform` library:
     # It will return a triple of empty strings if the distribution is not supported.
     # It works on Python 3. If we don't have an OS version,
     # the unit tests fail to run.
-    if not distro and not os_version and not codename:
-        distro = 'lfs'
+    if not distribution and not os_version and not codename:
+        distribution = 'lfs'
         version = release
         os_version = release
 
     info['os'] = 'linux'
-    info['linux_distro'] = distro
+    info['linux_distro'] = distribution
 elif system in ['DragonFly', 'FreeBSD', 'NetBSD', 'OpenBSD']:
     info['os'] = 'bsd'
     version = os_version = sys.platform
