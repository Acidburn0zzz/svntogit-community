commit 33f0e57bc84f0cd5cdf994127d81c99f2a23f659
Author: Felix Yan <felixonmars@archlinux.org>
Date:   Wed Feb 20 01:56:35 2019 +0800

    Fix string parsing with newline
    
    When looping over a joined str, if a node is ast.Str and the value is
    just a newline "\n", the write() function adds an additional indentation
    after it, which fails to represent the original string. By calling
    self.result.append() here directly the issue is resolved.
    
    The added test could show the issue. With code_gen unmodifed, it fails
    with the following error:
    
    ```
    AssertionError: "if 1:\n    x = f'{host}\\n\\t{port}\\n    '" != "if
    1:\n    x = f'{host}\\n\\t{port}\\n'"
      if 1:
          -     x = f'{host}\n\t{port}\n    '?
          ----
          +     x = f'{host}\n\t{port}\n'
    ```
    
    Which is exactly the problem.
    
    This fixes parsing issues with many of Python 3.7's stdlib.

diff --git a/astor/code_gen.py b/astor/code_gen.py
index 157d2cc..453d108 100644
--- a/astor/code_gen.py
+++ b/astor/code_gen.py
@@ -566,7 +566,7 @@ class SourceGenerator(ExplicitNodeVisitor):
             def recurse(node):
                 for value in node.values:
                     if isinstance(value, ast.Str):
-                        self.write(value.s)
+                        self.result.append(value.s)
                     elif isinstance(value, ast.FormattedValue):
                         with self.delimit('{}'):
                             self.visit(value.value)
diff --git a/tests/test_code_gen.py b/tests/test_code_gen.py
index 3a8be7b..0db4279 100644
--- a/tests/test_code_gen.py
+++ b/tests/test_code_gen.py
@@ -516,6 +516,11 @@ class CodegenTestCase(unittest.TestCase, Comparisons):
         x = f"""{host}\n\t{port}\n"""
         '''
         self.assertSrcRoundtripsGtVer(source, (3, 6))
+        source = '''
+        if 1:
+            x = f'{host}\\n\\t{port}\\n'
+        '''
+        self.assertSrcRoundtripsGtVer(source, (3, 6))
 
     def test_docstring_function(self):
         source = '''
