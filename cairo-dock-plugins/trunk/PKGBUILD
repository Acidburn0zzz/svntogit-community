# $Id$
# Maintainer: Maxime Gauduin <alucryd@gmail.com>
# Contributor: Tofe <chris.chapuis@gmail.com>
# Contributor: zhuqin <zhuqin83@gmail.com>
# Contributor: tri1976 <trile7@gmail.com>
# Contributor: snoopy33 <snoopy33@no-log.org>

pkgname=cairo-dock-plugins
pkgver=3.2.0
pkgrel=1
pkgdesc="Plugins for Cairo-Dock"
url="https://launchpad.net/cairo-dock"
license=('GPL')
arch=('i686' 'x86_64')
groups=('cairo-dock')
depends=('cairo-dock')
makedepends=('cmake' 'alsa-lib' 'fftw' 'gnome-menus' 'gtk-sharp-2' 'gvfs' 'libetpan' 'libexif' 'libical' 'libpulse' 'libxklavier' 'libxxf86vm' 'libzeitgeist' 'lm_sensors' 'ndesk-dbus-glib' 'python' 'ruby' 'upower' 'vala' 'vte3' 'webkitgtk3')
optdepends=('alsa-lib: Alsa-Mixer applet'
            'gnome-menus: GMenu applet'
            'fftw: Impulse applet'
            'libpulse: Impulse applet'
            'libxklavier: Keyboard-indicator applet'
            'libetpan: Mail applet'
            'libzeitgeist: Recent-Events applet'
            'vte3: Terminal applet'
            'webkitgtk3: Weblets applet'
            'libxxf86vm: XGamma applet'
            'gvfs: GVFS integration'
            'lm_sensors: Sensors support'
            'upower: UPower support'
            'libical: iCal support'
            'libexif: exif support'
            'python: Python interface'
            'gtk-sharp-2: Mono interface'
            'ndesk-dbus-glib: Mono interface'
            'ruby: Ruby interface'
            'vala: Vala interface')
options=('!libtool')
source=("http://launchpad.net/cairo-dock-plug-ins/3.2/${pkgver}/+download/${pkgname}-${pkgver}.tar.gz" 'alsa-mixer-applet.patch' 'applet-host-ias.patch')
sha256sums=('e407e1c0d54ae37815726d0f2a66f12ec8263499df99198646bcecccfc688b5c'
            'e474314037fe85dfb9e90c17b18f87936a911699d97fee5470ccd812ff6697c1'
            '28be6144e9006f5c166d8f0119de1747ee2caf8e13072177a8d0dab23fd964b3')

build() {
  cd "${srcdir}"/${pkgname}-${pkgver}

# Patch
  patch -Np1 -i ../alsa-mixer-applet.patch
  patch -Np1 -i ../applet-host-ias.patch

# Build
  if [[ -d build ]]; then
    rm -rf build
  fi
  mkdir build && cd build
  cmake .. -DCMAKE_INSTALL_PREFIX=/usr
  make
}

package() {
  cd "${srcdir}"/${pkgname}-${pkgver}/build

# Install
  make DESTDIR=${pkgdir} install
}

# vim: ts=2 sw=2 et:
