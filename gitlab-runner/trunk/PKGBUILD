# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: Lubomir 'Kuci' Kucera <kuci24-at-gmail-dot-com>

pkgname=gitlab-runner
pkgver=14.6.0
_commit=5316d4
pkgrel=1
pkgdesc="The official GitLab CI runner written in Go"
arch=('x86_64')
url='https://gitlab.com/gitlab-org/gitlab-runner'
license=('GPL3')
depends=('ca-certificates' 'curl' 'git' 'glibc' 'tar')
makedepends=('git' 'go' 'git' 'mercurial' 'gox')
install=gitlab-runner.install
replaces=('gitlab-ci-multi-runner')
backup=('etc/gitlab-runner/config.toml')
noextract=("prebuilt-alpine-arm-${pkgver}.tar.xz"
           "prebuilt-alpine-arm64-${pkgver}.tar.xz"
           "prebuilt-alpine-s390x-${pkgver}.tar.xz"
           "prebuilt-alpine-x86_64-pwsh-${pkgver}.tar.xz"
           "prebuilt-alpine-x86_64-${pkgver}.tar.xz"
           "prebuilt-ubuntu-arm-${pkgver}.tar.xz"
           "prebuilt-ubuntu-arm64-${pkgver}.tar.xz"
           "prebuilt-ubuntu-s390x-${pkgver}.tar.xz"
           "prebuilt-ubuntu-x86_64-pwsh-${pkgver}.tar.xz"
           "prebuilt-ubuntu-x86_64-${pkgver}.tar.xz")
source=("git+https://gitlab.com/gitlab-org/gitlab-runner.git#tag=${_commit}"
        "prebuilt-alpine-arm-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-arm.tar.xz"
        "prebuilt-alpine-arm64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-arm64.tar.xz"
        "prebuilt-alpine-s390x-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-s390x.tar.xz"
        "prebuilt-alpine-x86_64-pwsh-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-x86_64-pwsh.tar.xz"
        "prebuilt-alpine-x86_64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-x86_64.tar.xz"
        "prebuilt-ubuntu-arm-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-arm.tar.xz"
        "prebuilt-ubuntu-arm64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-arm64.tar.xz"
        "prebuilt-ubuntu-s390x-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-s390x.tar.xz"
        "prebuilt-ubuntu-x86_64-pwsh-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-x86_64-pwsh.tar.xz"
        "prebuilt-ubuntu-x86_64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-x86_64.tar.xz"
        "gitlab-runner.service"
        "gitlab-runner.sysusers"
        "gitlab-runner.tmpfiles"
        "remove-syscall-test.patch"
        "config.toml")
sha512sums=('SKIP'
            '10d43b5a423f2d36e420e9776159872787fba8700fae968a0712d7997b1f61c6058407b279f52a56d1d8568c9c05ac734f406ee21018daa5b88f2cfcd8cfc276'
            '66a1910fc5369177d949dd56d2b4a65ae3285616d1907bf1ce144d73bc25269de2d7aaa5a1267c41a39c8899de1ef61620eb29be63bdb6c2da6d7e8fdcb3a66e'
            '78b14f30b6a613439b06ce5020696fe89d2ccdf4be18408950843dfe5a55fa1dbe1f49d20a4fda933db8515d25092e9ad3d03d6377ce73d167a5262d8c236c27'
            '52220fede436a750ddfd08164054f30ce3553aea41940ac96b83236637e330276214c2e07a31f891e3f1c44d36422f9121ba97c4eefb7458b3aa00995b196053'
            'dc3630b6ac0a83b89d33eec634ab2efb7a99c97d85b315171d557076c95c43b979e389659c487fdaaebf4fe08a7cc8422a1cf333e317c60fc6426cdf34b693ae'
            '6cc3546bd06848b44c085dfca609903dcb9cc37c5676157ca690ca11d087ae15a748d92be1589a0bf3cf05b98b7a806f6e20c180d00de0fab3815d4d45f27fec'
            '8fabc07a2741e1902933d9761685b7e2c4f121a52e3500d45a402359f29f52da6574ba3f85ca66bec16631c28bde4c1e3e47e3de6d8472dd28f8b65ed6d91654'
            '7cb1cf1b2b8d5748517700a339b3c78c4ff4d9095b372310843c806cd9def06bbef5f1980c2dd41a220b28dcd77bb0003b085ec5cda9464a5d26f045aa06bca5'
            'd4d16f799d231684b70384f7af939789adb33b3f84a8439af46c25a0abefad2c8f2a06a453b0ad7947950ad73857c34ac9c7aa5fb24107c1a2de10cb0f93002f'
            'ec85e51907ce0127e6b2b4909a24a4a23b16fc214ab25ef40110f5c9b09c1adb3ed90a2478d6aed7087e6f0d0ed03397fcf6491136591aa8524f3efde3a7af13'
            'c0af374b9986895aedcfaee6c67cfad68f0f7289f87e4611358adaff59a2f349f55764fe28b2b1f61f8bfeb61126d4f90d433c626fdf9b826a2de6217f86574f'
            '8aa7f08702e99053c696fcc2aaba83beb9e9cd6f31973d82862db9350ac46df3a095377625d31fe909677525290d2de922d7a97930ed235774cb8f0da8944d40'
            '6751d9fa0b27172d1b419c4138f5ac15cbc7c9147653a7258cf1470216142c637210bb60608c7ed0974e0e4057e5ddeae32225df1bb36e7dd1f20fec71e33cc3'
            'dc66f8c841c6b73ab031a5e4b891d6eb25a237647d179d792c73b645de99d7a2619788677e80d487b710eeef039242118b64abec9e32c7ce096f130732bcae43'
            '9718b94bd0ddb09095ffb8c1e60ca1e9649dabb1747e7fc95e58e404b2f9effdeb4cfd759f5b904443dc53a4e18c02003c38f85584713deb49f6a6d1007503de')

prepare() {
  cd gitlab-runner

  local version=$(make version | grep "Current version:" | sed -n "s/.*: \(.*\)/\1/p")
  local revision=$(make version | grep "Current revision:" | sed -n "s/.*: \(.*\)/\1/p")
  local branch=$(make version | grep "Current branch:" | sed -n "s/.*: \(.*\)/\1/p")

  # Upstream patches their own go here apparently and then they check for
  # whether it was patched. It's kinda weird and the whole thing isn't really
  # necessary at all if you let go upstream handle it:
  # https://github.com/golang/go/commit/a76511f3a40ea69ee4f5cd86e735e1c8a84f0aa2
  # Thankfully in Arch, we have a recent go (at least 1.17.5).
  patch -Np1 -i "$srcdir"/remove-syscall-test.patch

  sed -i "s/var VERSION.*/var VERSION = \"$version\"/" common/version.go
  sed -i "s/var REVISION.*/var REVISION = \"$revision\"/" common/version.go
  sed -i "s/var BRANCH.*/var BRANCH = \"$branch\"/" common/version.go
}

build() {
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -ldflags=-linkmode=external -mod=readonly -modcacherw"

  cd gitlab-runner
  go build -o gitlab-runner .
}

package() {
  cd gitlab-runner

  install -Dm644 "${srcdir}/config.toml" "${pkgdir}/etc/gitlab-runner/config.toml"
  install -Dm644 "${srcdir}/gitlab-runner.service" "${pkgdir}/usr/lib/systemd/system/gitlab-runner.service"
  install -Dm644 "${srcdir}/gitlab-runner.sysusers" "${pkgdir}/usr/lib/sysusers.d/gitlab-runner.conf"
  install -Dm644 "${srcdir}/gitlab-runner.tmpfiles" "${pkgdir}/usr/lib/tmpfiles.d/gitlab-runner.conf"
  install -Dm755 gitlab-runner "${pkgdir}/usr/bin/gitlab-runner"

  # Move prebuilt Docker images to hard-coded canonical location
  for image in prebuilt-{alpine,ubuntu}-{arm,arm64,s390x,x86_64-pwsh,x86_64}-${pkgver}.tar.xz; do
    install -Dm644 "${srcdir}/${image}" "${pkgdir}/usr/lib/gitlab-runner/helper-images/${image}"
  done
}
