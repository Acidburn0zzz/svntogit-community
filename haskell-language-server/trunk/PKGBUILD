# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=haskell-language-server
pkgname=haskell-language-server
pkgver=1.1.0.0
pkgrel=2
pkgdesc="LSP server for GHC"
url="https://github.com/haskell/haskell-language-server#readme"
license=("Apache")
arch=('x86_64')
depends=('ghc-libs' 'haskell-aeson' 'haskell-aeson-pretty' 'haskell-async'
         'haskell-base16-bytestring' 'haskell-cryptohash-sha1' 'haskell-data-default'
         'haskell-extra' 'haskell-floskell' 'haskell-fourmolu' 'haskell-fuzzy' 'haskell-ghc'
         'haskell-ghc-paths' 'haskell-ghcide' 'haskell-gitrev' 'haskell-hashable' 'haskell-hie-bios'
         'haskell-hiedb' 'haskell-hls-brittany-plugin' 'haskell-hls-class-plugin'
         'haskell-hls-eval-plugin' 'haskell-hls-explicit-imports-plugin'
         'haskell-hls-haddock-comments-plugin' 'haskell-hls-hlint-plugin' 'haskell-hls-plugin-api'
         'haskell-hls-retrie-plugin' 'haskell-hls-splice-plugin'
         'haskell-hls-stylish-haskell-plugin' 'haskell-hls-tactics-plugin' 'haskell-hslogger'
         'haskell-lens' 'haskell-lsp' 'haskell-optparse-applicative' 'haskell-optparse-simple'
         'haskell-ormolu' 'haskell-regex-tdfa' 'haskell-safe-exceptions' 'haskell-shake'
         'haskell-sqlite-simple' 'haskell-temporary' 'haskell-unordered-containers')
makedepends=('ghc' 'uusi' 'haskell-hls-test-utils' 'haskell-hspec-expectations' 'haskell-lsp-test'
             'haskell-lsp-types')
checkdepends=('cabal-install')
#source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
source=("https://github.com/haskell/haskell-language-server/archive/1.1.0/haskell-language-server-1.1.0.tar.gz")
sha512sums=('05f724ec6209a4c30e260b8e9f945c5bc58be6b98458ea11ba3b297fa74fecbec37dc292d9aeda2d6dd5a8f24c4125f6d20afbb35eeec6335c9ea7138ed89e52')

prepare() {
  cd haskell-language-server-1.1.0
  find test/testdata -name \*.cabal -exec uusi --add-options-all=-dynamic {} \;
}

build() {
  cd haskell-language-server-1.1.0

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie'

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd haskell-language-server-1.1.0
  PATH="$PWD/dist/build/haskell-language-server:$PWD/dist/build/haskell-language-server-wrapper:$PATH" LD_LIBRARY_PATH="$PWD/dist/build" runhaskell Setup test || echo "Tests failed"
}

package() {
  cd haskell-language-server-1.1.0

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
