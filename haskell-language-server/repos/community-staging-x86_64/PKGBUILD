# Maintainer: Felix Yan <felixonmars@archlinux.org>

_hkgname=haskell-language-server
pkgname=haskell-language-server
pkgver=1.0.0.0
pkgrel=14
pkgdesc="LSP server for GHC"
url="https://github.com/haskell/haskell-language-server#readme"
license=("Apache")
arch=('x86_64')
depends=('ghc-libs' 'haskell-aeson' 'haskell-async' 'haskell-base16-bytestring' 'haskell-brittany'
         'haskell-cryptohash-sha1' 'haskell-data-default' 'haskell-extra' 'haskell-floskell'
         'haskell-fourmolu' 'haskell-fuzzy' 'haskell-ghc' 'haskell-ghc-paths' 'haskell-ghcide'
         'haskell-gitrev' 'haskell-hashable' 'haskell-hie-bios' 'haskell-hiedb'
         'haskell-hls-brittany-plugin' 'haskell-hls-class-plugin' 'haskell-hls-eval-plugin'
         'haskell-hls-explicit-imports-plugin' 'haskell-hls-haddock-comments-plugin'
         'haskell-hls-hlint-plugin' 'haskell-hls-plugin-api' 'haskell-hls-retrie-plugin'
         'haskell-hls-splice-plugin' 'haskell-hls-tactics-plugin' 'haskell-hslogger' 'haskell-lens'
         'haskell-lsp' 'haskell-optparse-applicative' 'haskell-optparse-simple' 'haskell-ormolu'
         'haskell-regex-tdfa' 'haskell-safe-exceptions' 'haskell-shake' 'haskell-sqlite-simple'
         'stylish-haskell' 'haskell-temporary' 'haskell-unordered-containers' 'haskell-with-utf8')
makedepends=('ghc' 'uusi' 'haskell-blaze-markup' 'haskell-hspec' 'haskell-hspec-core'
             'haskell-hspec-expectations' 'haskell-lsp-test' 'haskell-megaparsec' 'haskell-tasty'
             'haskell-tasty-ant-xml' 'haskell-tasty-expected-failure' 'haskell-tasty-golden'
             'haskell-tasty-hunit' 'haskell-tasty-rerun' 'haskell-yaml')
checkdepends=('cabal-install')
#source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
source=("https://github.com/haskell/haskell-language-server/archive/ghcide-v1.1.0/haskell-language-server-ghcide-v1.1.0.tar.gz")
sha256sums=('ec611943b46027488d85135eb61245ea7cbd892ed9825b1456a4b74e0eb5a713')

prepare() {
  cd haskell-language-server-ghcide-v1.1.0
  find test/testdata -name \*.cabal -exec uusi --add-options-all=-dynamic {} \;
}

build() {
  cd haskell-language-server-ghcide-v1.1.0

  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie'

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd haskell-language-server-ghcide-v1.1.0
  PATH="$PWD/dist/build/haskell-language-server:$PWD/dist/build/haskell-language-server-wrapper:$PATH" LD_LIBRARY_PATH="$PWD/dist/build" runhaskell Setup test || echo "Tests failed"
}

package() {
  cd haskell-language-server-ghcide-v1.1.0

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname/
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
