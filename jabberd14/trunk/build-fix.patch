diff -wbBur /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/lib/xmlnode.cc jabberd14-1.6.1.1/jabberd/lib/xmlnode.cc
--- /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/lib/xmlnode.cc	2011-08-09 00:37:29.000000000 +0400
+++ jabberd14-1.6.1.1/jabberd/lib/xmlnode.cc	2007-04-07 23:43:18.000000000 +0400
@@ -910,8 +910,8 @@
     }
 
     /* separate this step from the next one, and check for a predicate in this step */
-    start_predicate = strchr((char*)path, '[');
-    next_step = strchr((char*)path, '/');
+    start_predicate = strchr(path, '[');
+    next_step = strchr(path, '/');
     if (start_predicate == NULL && next_step == NULL) {
 	this_step = pstrdup(p, path);
     } else if (start_predicate == NULL || start_predicate > next_step && next_step != NULL) {
@@ -1833,8 +1833,7 @@
     if (lang != NULL && strchr(lang, '-') != NULL) {
 	snprintf(general_lang, sizeof(general_lang), "%s", lang);
 	if (strchr(lang, '-') != NULL) {
-	    char *tmp = strchr((char*)lang, '-');
-	    tmp[0] = 0;
+	    strchr(lang, '-')[0] = 0;
 	} else {
 	    general_lang[0] = 0;
 	}
diff -wbBur /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/log.cc jabberd14-1.6.1.1/jabberd/log.cc
--- /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/log.cc	2011-08-09 00:37:29.000000000 +0400
+++ jabberd14-1.6.1.1/jabberd/log.cc	2007-07-20 17:56:59.000000000 +0400
@@ -86,7 +86,7 @@
     char *pos, c = '\0';
     if(zone != NULL && debug__zones != NULL)
     {
-	pos = strchr((char*)zone,'.');
+	pos = strchr(zone,'.');
         if(pos != NULL)
         {
             c = *pos;
diff -wbBur /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/mio_tls.cc jabberd14-1.6.1.1/jabberd/mio_tls.cc
--- /mnt/temp/builds/staging-i686/sergej/build/src/jabberd14-1.6.1.1/jabberd/mio_tls.cc	2011-08-09 00:53:55.000000000 +0400
+++ jabberd14-1.6.1.1/jabberd/mio_tls.cc	2007-07-17 03:20:44.000000000 +0400
@@ -43,7 +43,6 @@
 #include <vector>
 #include <list>
 #include <iostream>
-#include <gnutls/openpgp.h>
 
 // Tell gcrypt that we are using libpth - had to move this to a plain C file
 extern "C" void mio_tls_gcrypt_init(void);
@@ -613,8 +612,7 @@
 	    }
 
 	    // load OpenPGP key/certificate
-//	    ret = gnutls_certificate_set_openpgp_key_file(current_credentials, pubfile, privfile);
-	    ret = gnutls_certificate_set_openpgp_key_file(current_credentials, pubfile, privfile, GNUTLS_OPENPGP_FMT_BASE64);
+	    ret = gnutls_certificate_set_openpgp_key_file(current_credentials, pubfile, privfile);
 	    if (ret < 0) {
 		log_error(NULL, "Error loading OpenPGP key pub=%s/priv=%s: %s", pubfile, privfile, gnutls_strerror(ret));
 		continue;
@@ -633,8 +631,7 @@
 	    }
 
 	    // load the OpenPGP keyring
-//	    ret = gnutls_certificate_set_openpgp_keyring_file(current_credentials, file);
-	    ret = gnutls_certificate_set_openpgp_keyring_file(current_credentials, file, GNUTLS_OPENPGP_FMT_BASE64);
+	    ret = gnutls_certificate_set_openpgp_keyring_file(current_credentials, file);
 	    if (ret < 0) {
 		log_error(NULL, "Error loading OpenPGP keyring %s: %s", file, gnutls_strerror(ret));
 		continue;
@@ -643,8 +640,6 @@
 	    continue;
 	}
 
-
-/*
 	// load GnuPG trustdb
 	if (j_strcmp(xmlnode_get_localname(cur), "trustdb") == 0) {
 	    char const *const file = xmlnode_get_data(cur);
@@ -661,7 +656,6 @@
 		continue;
 	    }
 	}
-*/
 
 	// setup protocols to use
 	if (j_strcmp(xmlnode_get_localname(cur), "protocols") == 0) {
