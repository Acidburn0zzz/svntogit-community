# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=apm
pkgver=2.4.5
pkgrel=2
pkgdesc='Atom package manager'
arch=('x86_64')
url='https://github.com/atom/apm'
license=('MIT')
depends=('libsecret' 'nodejs>=10' 'npm' 'python')
makedepends=('git')
provides=('nodejs-atom-package-manager')
conflicts=('nodejs-atom-package-manager')
replaces=('nodejs-atom-package-manager')
options=(!emptydirs)
_gitutils_tag=5.6.1
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js'
        'no-scripts.patch'
        'use-system-npm.patch'
        'git-utils.patch')
sha512sums=('bf84e40be7491fac7bc7c7449e88d035549b526874371f4314ecfd80592e21459435d03c5d74d662551285161536982f30631d5add17f2929e9b3b8a4eb17d13'
            'cc81dd506dc70c3c6b561e99e78eebbee45ce5543f2bd9dce6bc61949ecd876fc26c68b90b596c40ef839a4dc3c50e22f79c45d9137380925c2d06b5c2dec705'
            '50646299ffff427b8233ac7fff7cf7abd46a8ffde121c166a8084d20d2e36b1bf3e35032eca339c9499ca844080c616fa52b0f4a13996305f2a4e41243bbf858'
            'ef467bd6d3dbe3198fdd78f63489063e838c79103161dbfd611fe165e27a8c12c70792090ef3b3ee2f87cbe87c66114aec608e45b384895b4b88563b829c6d36'
            'bf9f4023bfbdc7240e5ed8a87bc9097eb7a57b2bae44f1044098eb380b15ff8a12f92347b99b6754c6adb537b8310d1f47bdfd3e60db411e4d69d575ce70b2a6')

_apmdir='/usr/lib/node_modules/atom-package-manager'

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd} bin/npm{,.cmd}
  rm src/cli.coffee
  install -m755 "${srcdir}"/apm.js bin/apm

  # Use system npm
  patch -Np1 -i "${srcdir}"/use-system-npm.patch

  # Don't download binary Node
  patch -Np1 -i "${srcdir}"/no-scripts.patch
  rm BUNDLED_NODE_VERSION script/*
}

build() {
  cd apm-${pkgver}

  npm update keytar  # Node 12
  npm install coffee-script
  npx coffee -c --no-header -o lib src/*.coffee
  rm -r node_modules
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr $(npm pack | tail -1)

  cd "${srcdir}/apm-build/usr/lib/node_modules/atom-package-manager/node_modules/git-utils"
  patch -Np1 -i "${srcdir}/git-utils.patch"
  node-gyp rebuild
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src/*.{cc,h}" -prune -exec rm -r '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "appveyor.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "scripts" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
}
