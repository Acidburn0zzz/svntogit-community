# $Id$
# Maintainer: Dave Reisner <d@falconindy.com>

pkgname=systemd
pkgver=29
pkgrel=1
pkgdesc="Session and Startup manager"
arch=('i686' 'x86_64')
url="http://www.freedesktop.org/wiki/Software/systemd"
license=('GPL2')
depends=('dbus-core' 'sysvinit' 'util-linux>=2.19')
makedepends=('docbook-xsl' 'libxslt' 'cryptsetup' 'gtk2' 'libnotify')
optdepends=('cryptsetup: required for encrypted block devices'
            'dbus-python: systemd-analyze'
            'gtk2: systemadm'
            'initscripts: legacy support for hostname and vconsole setup'
            'initscripts-systemd: native boot and initialization scripts'
            'libnotify: systemadm'
            'python2-cairo: systemd-analyze'
            'systemd-arch-units: collection of native unit files for Arch daemon/init scripts')
groups=('systemd')
options=('!libtool')
backup=(etc/systemd/system.conf
        etc/tmpfiles.d/console.conf
        usr/lib/tmpfiles.d/legacy.conf
        usr/lib/tmpfiles.d/systemd.conf
        usr/lib/tmpfiles.d/x11.conf)
install=systemd.install
source=("http://www.freedesktop.org/software/$pkgname/$pkgname-$pkgver.tar.bz2"
        "os-release")
md5sums=('e91ffd208c5f03e5c11966eee7b684b0'
         '752636def0db3c03f121f8b4f44a63cd')

build() {
  cd "$srcdir/$pkgname-$pkgver"

  ./configure --prefix=/usr \
              --with-rootdir= \
              --sysconfdir=/etc \
              --libexecdir=/usr/lib \
              --localstatedir=/var \
              --disable-audit \
              --disable-tcpwrap

  make
}

package() {
  cd "$srcdir/$pkgname-$pkgver"

  make DESTDIR="$pkgdir" install

  install -Dm644 "$srcdir/os-release" "$pkgdir/etc/os-release"
  printf "d /run/console 755 root root\n" > "$pkgdir/etc/tmpfiles.d/console.conf"

  # fix systemd-analyze for python2
  sed -i '1s/python$/python2/' "$pkgdir/usr/bin/systemd-analyze"

  # rename man pages to avoid conflicts with sysvinit
  cd "$pkgdir/usr/share/man/man8"
  for manpage in telinit halt reboot poweroff runlevel shutdown; do
    mv {,systemd.}"$manpage.8"
  done
}

