diff --git c/gtk2_ardour/wscript w/gtk2_ardour/wscript
index d3824a0a63..b8d92513bd 100644
--- c/gtk2_ardour/wscript
+++ w/gtk2_ardour/wscript
@@ -588,7 +588,9 @@ def build(bld):
         obj.source    = list(gtk2_ardour_sources)
         obj.target = 'ardour-' + str (bld.env['VERSION'])
         obj.includes = ['.']
+        obj.includes += bld.env['INCLUDES_LILV']
         obj.ldflags = ['-no-undefined']
+        obj.ldflags = ['-l' + lib for lib in bld.env['LIB_LILV']]
 
         if bld.is_defined('WINDOWS_VST_SUPPORT'):
         # Windows VST support mingw
diff --git c/libs/plugins/a-comp.lv2/wscript w/libs/plugins/a-comp.lv2/wscript
index f0ebb1d33d..affef9b4fa 100644
--- c/libs/plugins/a-comp.lv2/wscript
+++ w/libs/plugins/a-comp.lv2/wscript
@@ -25,15 +25,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
+    if bld.is_defined('HAVE_LV2'):
         # Build RDF files
         for i in ['manifest.ttl', 'a-comp.ttl', 'a-comp#stereo.ttl', 'presets.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'c cshlib',
diff --git c/libs/plugins/a-delay.lv2/wscript w/libs/plugins/a-delay.lv2/wscript
index 666ef0d5ab..2af05ff137 100644
--- c/libs/plugins/a-delay.lv2/wscript
+++ w/libs/plugins/a-delay.lv2/wscript
@@ -25,15 +25,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
+    if bld.is_defined('HAVE_LV2'):
         # Build RDF files
         for i in ['manifest.ttl', 'a-delay.ttl', 'presets.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'c cshlib',
diff --git c/libs/plugins/a-eq.lv2/wscript w/libs/plugins/a-eq.lv2/wscript
index 0610ba2eea..e36a804f7f 100644
--- c/libs/plugins/a-eq.lv2/wscript
+++ w/libs/plugins/a-eq.lv2/wscript
@@ -25,15 +25,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
+    if bld.is_defined('HAVE_LV2'):
         # Build RDF files
         for i in ['manifest.ttl', 'a-eq.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'c cshlib',
diff --git c/libs/plugins/a-fluidsynth.lv2/wscript w/libs/plugins/a-fluidsynth.lv2/wscript
index af6fcf08a8..81e59adeac 100644
--- c/libs/plugins/a-fluidsynth.lv2/wscript
+++ w/libs/plugins/a-fluidsynth.lv2/wscript
@@ -24,15 +24,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
+    if bld.is_defined('HAVE_LV2'):
         # Build RDF files
         for i in ['manifest.ttl', 'a-fluidsynth.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'cxx cshlib',
diff --git c/libs/plugins/a-reverb.lv2/wscript w/libs/plugins/a-reverb.lv2/wscript
index 35601f2179..adc1b2a4ea 100644
--- c/libs/plugins/a-reverb.lv2/wscript
+++ w/libs/plugins/a-reverb.lv2/wscript
@@ -24,15 +24,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
-        # Build RDF files
+    if bld.is_defined('HAVE_LV2'):
+        # Build RDF fles
         for i in ['manifest.ttl', 'a-reverb.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'c cshlib',
diff --git c/libs/plugins/reasonablesynth.lv2/wscript w/libs/plugins/reasonablesynth.lv2/wscript
index cedda4c308..0eb5c55a04 100644
--- c/libs/plugins/reasonablesynth.lv2/wscript
+++ w/libs/plugins/reasonablesynth.lv2/wscript
@@ -24,15 +24,15 @@ def build(bld):
     module_pat = re.sub('^lib', '', bld.env.cshlib_PATTERN)
     module_ext = module_pat[module_pat.rfind('.'):]
 
-    if bld.is_defined ('HAVE_LV2'):
+    if bld.is_defined('HAVE_LV2'):
         # Build RDF files
         for i in ['manifest.ttl', 'reasonablesynth.ttl']:
-            bld(features     = 'subst',
-                source       = i + '.in',
-                target       = '../../LV2/%s/%s' % (bundle, i),
-                install_path = '${LV2DIR}/%s' % bundle,
-                chmod        = Utils.O644,
-                LIB_EXT      = module_ext)
+            obj = bld(features='subst')
+            obj.source = i + '.in'
+            obj.target = '../../LV2/%s/%s' % (bundle, i)
+            obj.install_path = '${LV2DIR}/%s' % bundle
+            obj.chmod = Utils.O644
+            obj.dict = {'LIB_EXT': module_ext}
 
         # Build plugin library
         obj = bld(features     = 'c cshlib',
diff --git c/libs/ptformat/wscript w/libs/ptformat/wscript
index 4d381234fe..ad3370d19b 100644
--- c/libs/ptformat/wscript
+++ w/libs/ptformat/wscript
@@ -31,7 +31,7 @@ def build(bld):
     obj = bld(features = 'cxx cxxshlib')
     obj.source = 'ptfformat.cc'
     obj.export_includes = ['.']
-    obj.includes     = ['.']
+    obj.includes = ['.'] + bld.env['INCLUDES_GLIB']
     obj.name         = 'libptformat'
     obj.target       = 'ptformat'
     obj.use          = 'libardour'
diff --git c/libs/surfaces/osc/wscript w/libs/surfaces/osc/wscript
index 4d0dba6750..6b8db9f86c 100644
--- c/libs/surfaces/osc/wscript
+++ w/libs/surfaces/osc/wscript
@@ -27,7 +27,7 @@ def build(bld):
     obj.export_includes = ['.']
     obj.defines      = [ 'PACKAGE="ardour_osc"' ]
     obj.defines     += [ 'ARDOURSURFACE_DLL_EXPORTS' ]
-    obj.includes     = ['.', './osc']
+    obj.includes = ['.', './osc'] + bld.env['INCLUDES_XML']
     obj.name         = 'libardour_osc'
     obj.target       = 'ardour_osc'
     obj.uselib       = 'LO GTKMM GTK GDK'
diff --git c/libs/surfaces/push2/wscript w/libs/surfaces/push2/wscript
index 9c75f9d69f..f12e1a5578 100644
--- c/libs/surfaces/push2/wscript
+++ w/libs/surfaces/push2/wscript
@@ -39,7 +39,7 @@ def build(bld):
     obj.defines      = [ 'PACKAGE="ardour_push2"' ]
     obj.defines     += [ 'ARDOURSURFACE_DLL_EXPORTS' ]
     obj.defines     += [ 'VERSIONSTRING="' + bld.env['VERSION'] + '"' ]
-    obj.includes     = [ '.', './push2']
+    obj.includes = ['.', './push2'] + bld.env['INCLUDES_XML']
     obj.name         = 'libardour_push2'
     obj.target       = 'ardour_push2'
     obj.uselib       = 'CAIROMM PANGOMM USB GTKMM SIGCPP'
diff --git c/libs/widgets/wscript w/libs/widgets/wscript
index 0559abe4dc..6e7ca29fc6 100644
--- c/libs/widgets/wscript
+++ w/libs/widgets/wscript
@@ -76,9 +76,9 @@ def build(bld):
         obj.defines      = [ ]
 
     obj.export_includes = ['.']
-    obj.includes     = ['.']
     obj.uselib       = 'SIGCPP CAIROMM GTKMM BOOST XML'
     obj.use          = [ 'libpbd', 'libgtkmm2ext' ]
+    obj.includes = ['.'] + bld.env['INCLUDES_GLIB']
     obj.name         = 'libwidgets'
     obj.target       = 'widgets'
     obj.vnum         = WIDGETS_LIB_VERSION
diff --git c/session_utils/wscript w/session_utils/wscript
index 5fe9445426..a98694f3d6 100644
--- c/session_utils/wscript
+++ w/session_utils/wscript
@@ -86,7 +86,7 @@ def build(bld):
     utils = bld.path.ant_glob('*.cc', excl=['example.cc', 'common.cc'])
 
     for util in utils:
-        fn = str(util)[:-3]
+        fn = os.path.splitext(os.path.basename(str(util)))[0]
         build_ardour_util(bld, fn)
         if bld.env['build_target'] != 'mingw':
             bld.symlink_as(bld.env['BINDIR'] + '/' + pgmprefix + "-" + fn, bld.env['LIBDIR'] + '/utils/ardour-util.sh')
diff --git c/tools/luadevel/wscript w/tools/luadevel/wscript
index 3190380091..d56d72ad86 100755
--- c/tools/luadevel/wscript
+++ w/tools/luadevel/wscript
@@ -27,12 +27,6 @@ def configure(conf):
 
 def build(bld):
     VERSION = "%s.%s" % (bld.env['MAJOR'], bld.env['MINOR'])
-    if not bld.is_defined('HAVE_READLINE'):
-            return;
-    # no wine
-    if bld.is_defined('WINDOWS_VST_SUPPORT') and bld.env['build_target'] != 'mingw':
-        return
-
     if bld.env['build_target'] != 'mingw':
     # TEST/DEVEL TOOL #######################
         obj = bld (features = 'cxx c cxxprogram')
