From da7f9732b6d9d52c8bca5cdbb536beb1fac14b44 Mon Sep 17 00:00:00 2001
From: Jakub Stasiak <jakub@stasiak.at>
Date: Wed, 4 Nov 2015 23:38:33 +0100
Subject: [PATCH] subprocess: Fix Python 3.5 mswindows regression

In Python 3.5 subprocess.mswindows no longer exists. It is renamed to
subprocess._mswindows, I decided we don't really have to access that
now "private" attribute in order to know if we're on MS Windows.
---
 eventlet/green/subprocess.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/eventlet/green/subprocess.py b/eventlet/green/subprocess.py
index 8a2cd50..1347404 100644
--- a/eventlet/green/subprocess.py
+++ b/eventlet/green/subprocess.py
@@ -17,6 +17,7 @@
 
 patcher.inject('subprocess', globals(), *to_patch)
 subprocess_orig = __import__("subprocess")
+mswindows = sys.platform == "win32"
 
 
 if getattr(subprocess_orig, 'TimeoutExpired', None) is None:
@@ -46,7 +47,7 @@ class Popen(subprocess_orig.Popen):
     # Windows. (see eventlet.greenio.set_nonblocking()) As the sole purpose of
     # this __init__() override is to wrap the pipes for eventlet-friendly
     # non-blocking I/O, don't even bother overriding it on Windows.
-    if not subprocess_orig.mswindows:
+    if not mswindows:
         def __init__(self, args, bufsize=0, *argss, **kwds):
             self.args = args
             # Forward the call to base-class constructor
@@ -93,7 +94,7 @@ def wait(self, timeout=None, check_interval=0.01):
                 raise
     wait.__doc__ = subprocess_orig.Popen.wait.__doc__
 
-    if not subprocess_orig.mswindows:
+    if not mswindows:
         # don't want to rewrite the original _communicate() method, we
         # just want a version that uses eventlet.green.select.select()
         # instead of select.select().
